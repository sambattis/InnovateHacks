{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sb421\\\\OneDrive\\\\Desktop\\\\InnovateHacks_Hackathon\\\\frontend\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport { createRoot } from 'react-dom/client';\nimport './App.css';\nimport React, { useRef, useState } from \"react\";\n//import * as React from 'react';\nimport { APIProvider, useDirectionService, useApiIsLoaded, useAutocomplete, Marker, Map, AdvancedMarker, useDirectionsRenderer, useMapsLibrary, Pin, InfoWindow, AutocompleteProps } from \"@vis.gl/react-google-maps\";\nimport Multiple from \"./components/Form.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nexport default function App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [selected, setSelected] = useState(null);\n  const [position, setPosition] = useState({\n    lat: 51,\n    lng: 10\n  });\n  // const [data, setData] = useState({car: \"\",walk: \"\",bus: \"\",coX: 10,coY: 10,coX1: 10,coY1: 10,coX2: 10, coY2: 10});\n  const [data, setData] = useState({\n    car: \"\",\n    walk: \"\",\n    bus: \"\",\n    coX: 10,\n    coY: 10,\n    coX1: 10,\n    coY1: 10,\n    coX2: 10,\n    coY2: 10,\n    add1: \"120 NW 10th St, Gainesville, FL 32601\",\n    add2: \"\",\n    add3: \"\"\n  });\n  const childToParent = childdata => {\n    setData(childdata);\n    console.log(data);\n  };\n  const [map, setMap] = useState(null);\n  const [dResponse, setDResponse] = useState(null);\n  const [travelTime, setTravelTime] = useState('');\n  const [distance, setDistance] = useState('');\n  const [drivingPref, setDrivingPref] = useState('');\n  const [bikePref, setBikePref] = useState('');\n  const [walkPref, setWalkPref] = useState('');\n  const destinationRef = useRef();\n  const originRef = useRef();\n  const travelMethodRef = useRef();\n  const Place = function (xCo, yCo, freq) {\n    const xCo_ = xCo;\n    const yCo_ = yCo;\n    const freq_ = freq;\n    return {\n      xCo_,\n      yCo_,\n      freq_\n    };\n  };\n  const PlaceOne = Place(\"3\", \"H\");\n\n  //destinationRef = position\n  //originRef = position2\n  //// {process.env.GOOGLE_MAPS_API_KEY}\n\n  return /*#__PURE__*/_jsxDEV(APIProvider, {\n    apiKey: process.env.GOOGLE_MAPS_API_KEY,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h\", {\n          children: \"NuCasa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => findLocation(data),\n          children: \"testDirections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"split left-panel \",\n      children: [/*#__PURE__*/_jsxDEV(Multiple, {\n        childToParent: childToParent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: childToParent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        primary: true,\n        onClick: () => childToParent(data),\n        children: \"Click Child\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"split right-panel \",\n      style: {\n        height: \"97vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        zoom: 9,\n        center: position,\n        onLoad: map => setMap(map),\n        children: [dResponse && /*#__PURE__*/_jsxDEV(\"useDirectionsRenderer\", {\n          directions: dResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n  //onLoad={map => setMap(map)}\n\n  function calculateStrength(xCo, yCo) {\n    const totalScore = 0;\n    //findRoute(xCo, yCo, xCo1, yCo1, car) * carPref\n    //findRoute(xCo, yCo, xCo1, yCo1, bike) * bikePref\n    //and so on\n    //put each in a sorted data structure\n    //take lowest option\n    //multiply by freq\n    //add to totalScore\n    //repeat for all places\n  }\n\n  function useDirectionsRenderer({\n    dService\n  }) {\n    _s();\n    const isLoaded = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"]\n    });\n    const position2 = new google.maps.LatLng(53.5, 9.8);\n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2\n    });\n    dService.route(request, function (result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }\n  _s(useDirectionsRenderer, \"oNRLHFkVsI+kv7SCj7zxS3Lk62k=\", false, function () {\n    return [useApiIsLoaded, useMapsLibrary];\n  });\n  async function findBestHome(data) {\n    //matrix stuff\n    //calculateStrength(place being tested)\n  }\n  async function findRouteHelper(data) {\n    // const position5 = new google.maps.LatLng(53.5, 9.8);\n    // const position4 = new google.maps.LatLng(53, 9);\n    // const position1 = new google.maps.LatLng(data.coX,data.coY);\n    // const position2 = new google.maps.LatLng(data.coX1,data.coY1);\n    // const position3 = new google.maps.LatLng(data.coX2,data.coY2);\n\n    // DOESNT WORK: findRoute(parseFloat(data.coX), 9.8, 53,9, 'WALKING');\n    findRoute(parseFloat(data.coX), parseFloat(data.coY), parseFloat(data.coX1), parseFloat(data.coY1), 'WALKING');\n    // WORKS: findRoute(53.5, 9.8, 53,9, 'WALKING');\n  }\n\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    setPosition({\n      lat: xCo,\n      lng: yCo\n    }); //this will be moved to the strength calculation function when that is ready, this is just for testing\n\n    const {\n      DirectionsService\n    } = await google.maps.importLibrary(\"routes\");\n    const dService = new DirectionsService(); //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo);\n    const destination1 = new google.maps.LatLng(xCo1, yCo1);\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method\n    });\n    setDistance(result.routes[0].legs[0].distance.text);\n    setTravelTime(result.routes[0].legs[0].duration.text);\n    console.log(distance);\n    console.log(travelTime);\n    alert(`These two places are ${distance} far apart, and will take ${travelTime} to get there.`);\n  }\n\n  // let marker;\n  // let response;\n\n  async function findLocation(data) {\n    // const {DirectionsService} = await google.maps.importLibrary(\"places\")\n    // const dService = new DirectionsService //added() here idk why it worked\n    // const inputText = document.createElement(\"input\");\n    // inputText.type = \"text\";\n    // inputText.placeholder = \"Enter a location\";\n\n    // let response = geocode({ address: \"125 NW 10th St, Gainesville, FL 32601\" });\n    let response = geocode({\n      address: data.add1\n    });\n    //position temp changes to add1\n    // !!!!!!!!!!!!!!!\n    // MUST SET THE coX & coY value here but cannot for some reason\n    // Keep getting rawCenter.toJSON error  \n\n    // setData({coX: parseFloat(position.lat).valueOf,coY: parseFloat(position.lng).valueOf});\n    // setData({coX: position.lat.valueOf,coY: (position.lng.valueOf)});\n    //  response = geocode({ address: data.add2 });\n    //  setData({coX1: position.lat,coY1: position.lng});\n    //  response = geocode({ address: data.add3 });\n    //  setData({coX2: position.lat,coY2: position.lng});\n\n    findRouteHelper(data);\n  }\n\n  // function clear() {\n  //   marker.setMap(null);\n  //   responseDiv.style.display = \"none\";\n  // }\n\n  function geocode(request) {\n    let geocoder = new google.maps.Geocoder();\n    let response;\n    let responseDiv;\n    response = document.createElement(\"pre\");\n    response.id = \"response\";\n    response.innerText = \"\";\n    responseDiv = document.createElement(\"div\");\n    responseDiv.id = \"response-container\";\n    responseDiv.appendChild(response);\n\n    // clear();\n    geocoder.geocode(request).then(result => {\n      const {\n        results\n      } = result;\n      //manipuates map\n      setPosition(results[0].geometry.location);\n      //individual manipulation isn't working\n      // setPosition({ lat: results[0].geometry.location.lat});\n      // setPosition({ lng: results[0].geometry.location.lng});\n      // setPosition({ lat: results[0].geometry.location.lat,lng: results[0].geometry.location.lng });\n\n      // map.setCenter(results[0].geometry.location);\n      console.log(\"lat\" + parseFloat(JSON.stringify(results[0].geometry.location.lat, null, 2)));\n      // marker.setMap(map);\n      // setData({coX: parseFloat(results[0].geometry.location.lat),coY: parseFloat(results[0].geometry.location.lng)});\n\n      responseDiv.style.display = \"block\";\n      // console.log(results[0].location.lat);\n      console.log(\"result of geocoder\" + JSON.stringify(results, null, 2));\n      return results;\n    }).catch(e => {\n      alert(\"Geocode was not successful for the following reason: \" + e);\n    });\n  }\n}\n_s2(App, \"0ZWCNiKwYhCTAmw9KxgF9vxVRWI=\");\n_c = App;\nwindow.App = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s2","$RefreshSig$","createRoot","React","useRef","useState","APIProvider","useDirectionService","useApiIsLoaded","useAutocomplete","Marker","Map","AdvancedMarker","useDirectionsRenderer","useMapsLibrary","Pin","InfoWindow","AutocompleteProps","Multiple","jsxDEV","_jsxDEV","google","window","App","_s","selected","setSelected","position","setPosition","lat","lng","data","setData","car","walk","bus","coX","coY","coX1","coY1","coX2","coY2","add1","add2","add3","childToParent","childdata","console","log","map","setMap","dResponse","setDResponse","travelTime","setTravelTime","distance","setDistance","drivingPref","setDrivingPref","bikePref","setBikePref","walkPref","setWalkPref","destinationRef","originRef","travelMethodRef","Place","xCo","yCo","freq","xCo_","yCo_","freq_","PlaceOne","apiKey","process","env","GOOGLE_MAPS_API_KEY","children","className","fileName","lineNumber","columnNumber","onClick","findLocation","class","primary","style","height","zoom","center","onLoad","directions","calculateStrength","totalScore","dService","isLoaded","googleMapsApiKey","REACT_APP_API_KEY","libraries","position2","maps","LatLng","directionsRenderer","request","route","travelMode","destination","origin","result","status","setDirections","findBestHome","findRouteHelper","findRoute","parseFloat","xCo1","yCo1","method","DirectionsService","importLibrary","origin1","destination1","routes","legs","text","duration","alert","response","geocode","address","geocoder","Geocoder","responseDiv","document","createElement","id","innerText","appendChild","then","results","geometry","location","JSON","stringify","display","catch","e","_c","$RefreshReg$"],"sources":["C:/Users/sb421/OneDrive/Desktop/InnovateHacks_Hackathon/frontend/src/App.js"],"sourcesContent":["\"use client\";\nimport {createRoot} from 'react-dom/client';\nimport './App.css';\n\nimport React, {useRef, useState} from \"react\";\n//import * as React from 'react';\nimport {\n  APIProvider,\n  useDirectionService,\n  useApiIsLoaded,\n  useAutocomplete,\n  Marker,\n  Map,\n  AdvancedMarker,\n  useDirectionsRenderer,\nuseMapsLibrary,\n  Pin,\n  InfoWindow,\n  AutocompleteProps,\n} from \"@vis.gl/react-google-maps\"\n\nimport Multiple from \"./components/Form.js\";\n\nconst google = window.google\n\nexport default function App() {\n\n  const [selected, setSelected] = useState(null);\n\n  const [position, setPosition] = useState({lat: 51, lng: 10});\n  // const [data, setData] = useState({car: \"\",walk: \"\",bus: \"\",coX: 10,coY: 10,coX1: 10,coY1: 10,coX2: 10, coY2: 10});\n  const [data, setData] = useState({car: \"\",walk: \"\",bus: \"\",coX: 10,coY: 10,coX1: 10,coY1: 10,coX2: 10, coY2: 10, add1: \"120 NW 10th St, Gainesville, FL 32601\", add2: \"\",add3: \"\"});\n\n\n  const childToParent = (childdata) => {\n    setData(childdata);\n    console.log(data);\n  }\n\n  const [map, setMap] = useState((null))\n  const [dResponse, setDResponse] = useState(null)\n  const [travelTime, setTravelTime] = useState('')\n  const [distance, setDistance] = useState('')\n  const [drivingPref, setDrivingPref] = useState('')\n  const [bikePref, setBikePref] = useState('')\n  const [walkPref, setWalkPref] = useState('')\n  const destinationRef = useRef()\n  const originRef = useRef()\n  const travelMethodRef = useRef()\n\n  const Place = function(xCo, yCo, freq) {\n    const xCo_ = xCo;\n    const yCo_ = yCo;\n    const freq_ = freq;\n    return { xCo_, yCo_, freq_ };\n  };\n\n  const PlaceOne = Place(\"3\", \"H\");\n  \n\n  //destinationRef = position\n  //originRef = position2\n//// {process.env.GOOGLE_MAPS_API_KEY}\n\n\n  return (\n    \n    <APIProvider apiKey = {process.env.GOOGLE_MAPS_API_KEY}>\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h>NuCasa</h>\n          <button onClick ={() =>findLocation(data)}>testDirections</button>\n          {/* <button onClick ={() =>findRouteHelper(data)}>testDirections</button> */}\n        </header>\n      </div>\n     \n      <div class=\"split left-panel \">\n        <Multiple childToParent={childToParent}/>\n          <p>{childToParent}</p>\n          <button primary onClick={() => childToParent(data)}>Click Child</button>\n      </div>\n\n\n      <div class=\"split right-panel \" style = {{height: \"97vh\"} }>\n        <Map zoom = {9} center = {position} onLoad={map => setMap(map)}>\n        {dResponse && (\n            <useDirectionsRenderer directions={dResponse} />\n          )}\n        <Marker position={position} />\n        </Map>\n      </div>\n    </APIProvider>\n    \n  );\n//onLoad={map => setMap(map)}\n\n\n\nfunction calculateStrength(xCo, yCo) {\n  const totalScore = 0;\n //findRoute(xCo, yCo, xCo1, yCo1, car) * carPref\n //findRoute(xCo, yCo, xCo1, yCo1, bike) * bikePref\n //and so on\n //put each in a sorted data structure\n //take lowest option\n //multiply by freq\n //add to totalScore\n //repeat for all places\n}\n\n  function useDirectionsRenderer({dService}) {\n    const isLoaded  = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"],\n    });\n \n   \n    const position2 = new google.maps.LatLng(53.5, 9.8);\n\n    \n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2,\n    })\n    dService.route(request, function(result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }\n\n    async function findBestHome(data) {\n      //matrix stuff\n      //calculateStrength(place being tested)\n    }\n\n    async function findRouteHelper(data) {\n      // const position5 = new google.maps.LatLng(53.5, 9.8);\n      // const position4 = new google.maps.LatLng(53, 9);\n      // const position1 = new google.maps.LatLng(data.coX,data.coY);\n      // const position2 = new google.maps.LatLng(data.coX1,data.coY1);\n      // const position3 = new google.maps.LatLng(data.coX2,data.coY2);\n\n      // DOESNT WORK: findRoute(parseFloat(data.coX), 9.8, 53,9, 'WALKING');\n      findRoute(parseFloat(data.coX), parseFloat(data.coY), parseFloat(data.coX1), parseFloat(data.coY1), 'WALKING');\n      // WORKS: findRoute(53.5, 9.8, 53,9, 'WALKING');\n    }\n\n  \n\n\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    setPosition({lat:xCo, lng:yCo}); //this will be moved to the strength calculation function when that is ready, this is just for testing\n    \n    const {DirectionsService} = await google.maps.importLibrary(\"routes\")\n    const dService = new DirectionsService //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo)\n    const destination1 = new google.maps.LatLng(xCo1, yCo1)\n\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method,\n    })\n\n    setDistance(result.routes[0].legs[0].distance.text)\n    setTravelTime(result.routes[0].legs[0].duration.text)\n    console.log(distance)\n    console.log(travelTime) \n    alert(`These two places are ${distance} far apart, and will take ${travelTime} to get there.`);\n  }\n\n\n  // let marker;\n  // let response;\n\n  async function findLocation(data) {\n    // const {DirectionsService} = await google.maps.importLibrary(\"places\")\n    // const dService = new DirectionsService //added() here idk why it worked\n    // const inputText = document.createElement(\"input\");\n    // inputText.type = \"text\";\n    // inputText.placeholder = \"Enter a location\";\n    \n    // let response = geocode({ address: \"125 NW 10th St, Gainesville, FL 32601\" });\n    let response = geocode({ address: data.add1 });\n    //position temp changes to add1\n    // !!!!!!!!!!!!!!!\n    // MUST SET THE coX & coY value here but cannot for some reason\n    // Keep getting rawCenter.toJSON error  \n\n    // setData({coX: parseFloat(position.lat).valueOf,coY: parseFloat(position.lng).valueOf});\n    // setData({coX: position.lat.valueOf,coY: (position.lng.valueOf)});\n    //  response = geocode({ address: data.add2 });\n    //  setData({coX1: position.lat,coY1: position.lng});\n    //  response = geocode({ address: data.add3 });\n    //  setData({coX2: position.lat,coY2: position.lng});\n\n\n    findRouteHelper(data);\n\n  }\n\n  // function clear() {\n  //   marker.setMap(null);\n  //   responseDiv.style.display = \"none\";\n  // }\n\n\n  function geocode(request) {\n\n    let geocoder = new google.maps.Geocoder();\n    let response;\n      let responseDiv;\n\n\n    response = document.createElement(\"pre\");\n  response.id = \"response\";\n  response.innerText = \"\";\n  responseDiv = document.createElement(\"div\");\n  responseDiv.id = \"response-container\";\n  responseDiv.appendChild(response);\n\n\n    // clear();\n    geocoder\n      .geocode(request)\n      .then((result) => {\n        const { results } = result;\n        //manipuates map\n        setPosition(results[0].geometry.location);\n        //individual manipulation isn't working\n        // setPosition({ lat: results[0].geometry.location.lat});\n        // setPosition({ lng: results[0].geometry.location.lng});\n        // setPosition({ lat: results[0].geometry.location.lat,lng: results[0].geometry.location.lng });\n\n        // map.setCenter(results[0].geometry.location);\n        console.log(\"lat\" + parseFloat(JSON.stringify(results[0].geometry.location.lat,null,2)));\n        // marker.setMap(map);\n        // setData({coX: parseFloat(results[0].geometry.location.lat),coY: parseFloat(results[0].geometry.location.lng)});\n\n        responseDiv.style.display = \"block\";\n        // console.log(results[0].location.lat);\n        console.log(\"result of geocoder\" + JSON.stringify(results, null, 2));\n        return results;\n      })\n      .catch((e) => {\n        alert(\"Geocode was not successful for the following reason: \" + e);\n      });\n  }\n\n}\n\n\nwindow.App= App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}