{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sb421\\\\OneDrive\\\\Desktop\\\\NuCasa\\\\NuCasa\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { createRoot } from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { useRef, useState, useEffect } from \"react\";\n//import * as React from 'react';\nimport { APIProvider, Marker, Map } from \"@vis.gl/react-google-maps\";\nimport Form from \"./components/Form.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nexport default function App() {\n  _s();\n  const [position, setPosition] = useState({\n    lat: 51,\n    lng: 10\n  });\n  const [data, setData] = useState({\n    car: \"\",\n    walk: \"\",\n    bus: \"\",\n    coX: \"\",\n    coY: \"\",\n    coX1: \"\",\n    coY1: \"\",\n    coX2: \"\",\n    coY2: \"\"\n  });\n  useEffect(() => {\n    console.log(data);\n    if (data.coX) {\n      console.log('true');\n      startCalcs(data);\n    }\n  }, [data]);\n  const [map, setMap] = useState(null);\n  const [dResponse, setDResponse] = useState(null);\n  const [drivingPref, setDrivingPref] = useState('');\n  const [bikePref, setBikePref] = useState('');\n  const [walkPref, setWalkPref] = useState('');\n  const [transitPref, setTransitPref] = useState('');\n  //const destinationRef = useRef()\n  //const originRef = useRef()\n  //const travelMethodRef = useRef()\n\n  const Place = function (xCo, yCo, freq) {\n    let xCo_ = xCo;\n    let yCo_ = yCo;\n    let freq_ = freq;\n    return {\n      xCo_,\n      yCo_,\n      freq_\n    };\n  };\n  const [PlaceOne, setPlaceOne] = useState(null);\n  const [PlaceTwo, setPlaceTwo] = useState(null);\n  const [PlaceThree, setPlaceThree] = useState(null);\n  const [PlaceFour, setPlaceFour] = useState(null);\n  const [PlaceFive, setPlaceFive] = useState(null);\n  const [list, setList] = useState([]);\n  const [bestX, setBestX] = useState(0);\n  const [bestY, setBestY] = useState(0);\n  const key = process.env.REACT_APP_API_KEY;\n  console.log(key);\n  return /*#__PURE__*/_jsxDEV(APIProvider, {\n    apiKey: key,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 16\n          }, this), \" NuCasa \", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-map-marker-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"small-text\",\n          children: \"The perfect app for quick location triangulation! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split left-panel \",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        data: data,\n        setData: setData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split right-panel \",\n      style: {\n        height: \"95vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        zoom: 9,\n        center: position,\n        onLoad: map => setMap(map),\n        children: [dResponse && /*#__PURE__*/_jsxDEV(\"useDirectionsRenderer\", {\n          directions: dResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n  async function startCalcs(data) {\n    let minX = 90;\n    let maxX = -90;\n    let minY = 90;\n    let maxY = -90;\n    setBikePref(data.bike);\n    setWalkPref(data.walk);\n    setDrivingPref(data.car);\n    setTransitPref(data.transit);\n    setPlaceOne(Place(data.coX, data.coY, data.freq));\n    setPlaceTwo(Place(data.coX1, data.coY1, data.freq1));\n    setPlaceThree(Place(data.coX2, data.coY2, data.freq2));\n    setPlaceFour(Place(data.coX3, data.coY3, data.freq3));\n    setPlaceFive(Place(data.coX4, data.coY4, data.freq4));\n    let newList = [];\n    if (PlaceOne.xCo_ != \"\" && PlaceOne.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached One');\n      newList = newList.concat(PlaceOne);\n    }\n    if (PlaceTwo.xCo_ !== \"\" && PlaceTwo.yCo_ !== \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached Two');\n      newList = newList.concat(PlaceTwo);\n    }\n    if (PlaceThree.xCo_ !== \"\" && PlaceThree.yCo_ !== \"\" && PlaceThree.freq_ != \"\") {\n      console.log('reached Three');\n      newList = newList.concat(PlaceThree);\n    }\n    if (PlaceFour.xCo_ !== \"\" && PlaceFour.yCo_ !== \"\" && PlaceFour.freq_ != \"\") {\n      console.log('reached Four');\n      newList = newList.concat(PlaceFour);\n    }\n    if (PlaceFive.xCo_ != \"\" && PlaceFive.yCo_ != \"\" && PlaceFive.freq_ != \"\") {\n      console.log('reached Five');\n      newList = newList.concat(PlaceFive);\n    }\n    const finalNewList = newList;\n    setList(finalNewList);\n    console.log(list);\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].xCo_ > maxX) {\n        maxX = list[i].xCo_;\n      }\n      if (list[i].xCo_ < minX) {\n        minX = list[i].xCo_;\n      }\n      if (list[i].yCo_ > maxY) {\n        maxY = list[i].yCo_;\n      }\n      if (list[i].yCo_ < minY) {\n        minY = list[i].yCo_;\n      }\n    }\n    console.log(maxX);\n    console.log(maxY);\n    console.log(minX);\n    console.log(minY);\n    await findBestHome(minX, maxX, minY, maxY);\n  }\n  useEffect(() => {\n    console.log('You should live at');\n    console.log(bestX);\n    console.log(bestY);\n    console.log({\n      lat: bestX,\n      lng: bestY\n    });\n    setPosition({\n      lat: bestX,\n      lng: bestY\n    });\n  }, [bestX, bestY]);\n  async function findBestHome(minX, maxX, minY, maxY) {\n    let bestScore = 99999999;\n    let it = 0;\n    let firstBestX;\n    let firstBestY;\n    let xDiff = (parseFloat(maxX) - parseFloat(minX)) / 5;\n    let yDiff = (parseFloat(maxY) - parseFloat(minY)) / 5;\n    while (it < 5) {\n      let it1 = 0;\n      while (it1 < 5) {\n        let testVal = await calculateStrength(parseFloat(minX) + it * parseFloat(xDiff), parseFloat(minY) + it1 * parseFloat(yDiff));\n        //console.log(testVal);\n        if (testVal < bestScore) {\n          //console.log(\"improved\")\n          bestScore = testVal;\n          firstBestX = parseFloat(minX) + it * (maxX - minX) / 5;\n          firstBestY = parseFloat(minY) + it1 * (maxY - minY) / 5;\n        }\n        it1++;\n      }\n      it++;\n    }\n    let newMinX = parseFloat(firstBestX) - 0.5 * ((parseFloat(maxX) - parseFloat(minX)) / 5);\n    let newMaxX = parseFloat(firstBestX) + 0.5 * ((parseFloat(maxX) - parseFloat(minX)) / 5);\n    let newMinY = parseFloat(firstBestY) - 0.5 * ((parseFloat(maxY) - parseFloat(minY)) / 5);\n    let newMaxY = parseFloat(firstBestY) + 0.5 * ((parseFloat(maxY) - parseFloat(minY)) / 5);\n    //console.log(newMaxY);\n    //console.log(newMinY);\n    xDiff = (parseFloat(newMaxX) - parseFloat(newMinX)) / 5;\n    yDiff = (parseFloat(newMaxY) - parseFloat(newMinY)) / 5;\n    it = 0;\n    while (it < 5) {\n      let it1 = 0;\n      while (it1 < 5) {\n        let testVal = await calculateStrength(parseFloat(newMinX) + it * parseFloat(xDiff), parseFloat(newMinY) + it1 * parseFloat(yDiff));\n        //console.log(testVal);\n        //console.log(bestScore);\n        if (parseFloat(testVal) < parseFloat(bestScore)) {\n          //console.log(\"improved\")\n          bestScore = testVal;\n          firstBestX = parseFloat(newMinX) + it * parseFloat(xDiff);\n          firstBestY = parseFloat(newMinY) + it1 * parseFloat(yDiff);\n          //console.log(parseFloat(newMinX) + it * parseFloat(xDiff));\n        }\n\n        it1++;\n      }\n      it++;\n    }\n    //console.log(firstBestX);\n    //console.log(firstBestY);\n    setBestX(parseFloat(firstBestX));\n    setBestY(parseFloat(firstBestY));\n  }\n  async function calculateStrength(xCo, yCo) {\n    let totalScore = 0;\n    //console.log(xCo);\n    let dScore = 99999;\n    let bScore = 99999;\n    let wScore = 99999;\n    //console.log(yCo);\n    for (let i = 0; i < list.length; i++) {\n      //console.log((await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')));\n      dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n      bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n      wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n      //setTScore(findRoute(xCo, yCo, PlaceOne.xCo_,PlaceOne.yCo_, 'TRANSIT') * transitPref);\n      //console.log(parseFloat(dScore));\n      //console.log(bScore);\n      //console.log(wScore);\n      let bestScore = 0;\n      if (dScore < bScore && dScore < wScore) {\n        bestScore = dScore;\n      }\n      if (bScore < dScore && bScore < wScore) {\n        bestScore = bScore;\n      }\n      if (wScore < bScore && wScore < dScore) {\n        bestScore = wScore;\n      }\n      let curScore = parseFloat(bestScore) * parseFloat(list[i].freq_);\n      totalScore += parseFloat(curScore);\n      //console.log(totalScore);\n    }\n\n    return totalScore;\n  }\n  function parseTime(inputString) {\n    let regex = /(\\d+) hours (\\d+) mins/;\n    let match = inputString.match(regex);\n    let hours = 0;\n    let mins = 0;\n    //I think I'm still missing some options with days, will have to check later\n    if (!match) {\n      regex = /(\\d+) day (\\d+) hours/;\n      match = inputString.match(regex);\n      if (!match) {\n        regex = /(\\d+) days (\\d+) hours/;\n        match = inputString.match(regex);\n        if (!match) {\n          regex = /(\\d+) hour (\\d+) mins/;\n          match = inputString.match(regex);\n          if (!match) {\n            regex = /(\\d+) hour (\\d+) min/;\n            match = inputString.match(regex);\n            if (!match) {\n              regex = /(\\d+) hours (\\d+) min/;\n              match = inputString.match(regex);\n              if (!match) {\n                regex = /(\\d+) mins/;\n                match = inputString.match(regex);\n                if (!match) {\n                  regex = /(\\d+) mins/;\n                  match = inputString.match(regex);\n                  if (!match) {} else {\n                    hours = 0;\n                    mins = parseInt(match[1], 10);\n                  }\n                } else {\n                  hours = 0;\n                  mins = parseInt(match[1], 10);\n                }\n              } else {\n                hours = parseInt(match[1], 10);\n                mins = parseInt(match[2], 10);\n              }\n            } else {\n              hours = parseInt(match[1], 10); //error occurs at deepest point every time\n              mins = parseInt(match[2], 10);\n            }\n          } else {\n            hours = parseInt(match[1], 10);\n            mins = parseInt(match[2], 10);\n          }\n        } else {\n          hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n          mins = 0;\n        }\n      } else {\n        hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n        mins = 0;\n      }\n    } else {\n      hours = parseInt(match[1], 10);\n      mins = parseInt(match[2], 10);\n    }\n    let result = hours + mins / 60;\n    return result;\n  }\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    //console.log(xCo)\n    //console.log(yCo)\n    const {\n      DirectionsService\n    } = await google.maps.importLibrary(\"routes\");\n    const dService = new DirectionsService(); //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo);\n    const destination1 = new google.maps.LatLng(xCo1, yCo1);\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method\n    });\n\n    //setDistance(result.routes[0].legs[0].distance.text)\n    //setTravelTime(result.routes[0].legs[0].duration.text)\n    //parse time string and turn into double\n    let time = parseTime(result.routes[0].legs[0].duration.text);\n    // /console.log(time)\n    //console.log(distance)\n    //console.log(result.routes[0].legs[0].duration.text) \n    return time;\n  }\n}\n_s(App, \"X1C5u4GUZf2fXTnv2LB4HnWptsw=\");\n_c = App;\nwindow.App = App;\n\n/*  function useDirectionsRenderer({dService}) {\n    const isLoaded  = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"],\n    });\n \n   \n    const position2 = new google.maps.LatLng(53.5, 9.8);\n\n    \n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2,\n    })\n    dService.route(request, function(result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createRoot","v4","uuidv4","React","useRef","useState","useEffect","APIProvider","Marker","Map","Form","jsxDEV","_jsxDEV","google","window","App","position","setPosition","lat","lng","data","setData","car","walk","bus","coX","coY","coX1","coY1","coX2","coY2","console","log","startCalcs","map","setMap","dResponse","setDResponse","drivingPref","setDrivingPref","bikePref","setBikePref","walkPref","setWalkPref","transitPref","setTransitPref","Place","xCo","yCo","freq","xCo_","yCo_","freq_","PlaceOne","setPlaceOne","PlaceTwo","setPlaceTwo","PlaceThree","setPlaceThree","PlaceFour","setPlaceFour","PlaceFive","setPlaceFive","list","setList","bestX","setBestX","bestY","setBestY","key","process","env","REACT_APP_API_KEY","apiKey","children","className","class","fileName","lineNumber","columnNumber","style","height","zoom","center","onLoad","directions","minX","maxX","minY","maxY","bike","transit","freq1","freq2","coX3","coY3","freq3","coX4","coY4","freq4","newList","concat","finalNewList","i","length","findBestHome","bestScore","it","firstBestX","firstBestY","xDiff","parseFloat","yDiff","it1","testVal","calculateStrength","newMinX","newMaxX","newMinY","newMaxY","totalScore","dScore","bScore","wScore","findRoute","curScore","parseTime","inputString","regex","match","hours","mins","parseInt","result","xCo1","yCo1","method","DirectionsService","maps","importLibrary","dService","origin1","LatLng","destination1","route","origin","destination","travelMode","time","routes","legs","duration","text","_c","$RefreshReg$"],"sources":["C:/Users/sb421/OneDrive/Desktop/NuCasa/NuCasa/frontend/src/App.js"],"sourcesContent":["\"use client\";\nimport {createRoot} from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport React, {useRef, useState, useEffect} from \"react\";\n//import * as React from 'react';\nimport {\n  APIProvider,\n  Marker,\n  Map,\n} from \"@vis.gl/react-google-maps\"\n\nimport Form from \"./components/Form.js\";\n\nconst google = window.google\n\nexport default function App() {\n\n  const [position, setPosition] = useState({lat: 51, lng: 10});\n  const [data, setData] = useState({car: \"\", walk: \"\", bus: \"\", coX: \"\", coY: \"\", coX1: \"\", coY1: \"\", coX2: \"\", coY2: \"\"});\n\n  useEffect (() => {\n     console.log(data);\n    if (data.coX) {\n      console.log('true');\n      startCalcs(data);\n    }\n  }, [data])\n    \n\n  const [map, setMap] = useState((null))\n  const [dResponse, setDResponse] = useState(null)\n  const [drivingPref, setDrivingPref] = useState('')\n  const [bikePref, setBikePref] = useState('')\n  const [walkPref, setWalkPref] = useState('')\n  const [transitPref, setTransitPref] = useState('')\n  //const destinationRef = useRef()\n  //const originRef = useRef()\n  //const travelMethodRef = useRef()\n\n  const Place = function(xCo, yCo, freq) {\n    let xCo_ = xCo;\n    let yCo_ = yCo;\n    let freq_ = freq;\n    return { xCo_, yCo_, freq_ };\n  };\n\n  const [PlaceOne, setPlaceOne] = useState(null)\n  const [PlaceTwo, setPlaceTwo] = useState(null)\n  const [PlaceThree, setPlaceThree] = useState(null)\n  const [PlaceFour, setPlaceFour] = useState(null)\n  const [PlaceFive, setPlaceFive] = useState(null)\n\n  const [list, setList] = useState([])\n\n  const [bestX, setBestX] = useState(0)\n  const [bestY, setBestY] = useState(0)\n  const key = process.env.REACT_APP_API_KEY;\n  console.log(key);\n\n  return (\n    <APIProvider apiKey = {key} >\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3> <i class=\"fas fa-home\"></i> NuCasa <i class=\"fas fa-map-marker-alt\"></i></h3>\n        <i className=\"small-text\" >The perfect app for quick location triangulation! </i> \n        </header>\n      </div>\n      <div className=\"split left-panel \">\n        <Form data={data} setData={setData}/>\n      </div>\n      <div className=\"split right-panel \" style = {{height: \"95vh\"} }>\n        <Map zoom = {9} center = {position} onLoad={map => setMap(map)}>\n        {dResponse && (\n            <useDirectionsRenderer directions={dResponse} />\n          )}\n        <Marker position={position} />\n        </Map>\n      </div>\n    </APIProvider>\n    \n  );\n\n  async function startCalcs(data) {\n    let minX = 90;\n    let maxX = -90;\n    let minY = 90;\n    let maxY = -90;\n    setBikePref(data.bike);\n    setWalkPref(data.walk);\n    setDrivingPref(data.car);\n    setTransitPref(data.transit);\n    setPlaceOne(Place(data.coX, data.coY, data.freq));\n    setPlaceTwo(Place(data.coX1, data.coY1, data.freq1));\n    setPlaceThree(Place(data.coX2, data.coY2, data.freq2));\n    setPlaceFour(Place(data.coX3, data.coY3, data.freq3));\n    setPlaceFive(Place(data.coX4, data.coY4, data.freq4));\n    let newList = [];\n    if (PlaceOne.xCo_ != \"\" && PlaceOne.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached One');\n      newList = newList.concat(PlaceOne);\n    }\n\n    if (PlaceTwo.xCo_ !== \"\" && PlaceTwo.yCo_ !== \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached Two');\n      newList = newList.concat(PlaceTwo);\n    }\n    if (PlaceThree.xCo_ !== \"\" && PlaceThree.yCo_ !== \"\" && PlaceThree.freq_ != \"\") {\n      console.log('reached Three');\n      newList = newList.concat(PlaceThree);\n    }\n\n    if (PlaceFour.xCo_ !== \"\" && PlaceFour.yCo_ !== \"\" && PlaceFour.freq_ != \"\") {\n      console.log('reached Four');\n      newList = newList.concat(PlaceFour);\n    }\n\n    if (PlaceFive.xCo_ != \"\" && PlaceFive.yCo_ != \"\" && PlaceFive.freq_ != \"\") {\n      console.log('reached Five');\n      newList = newList.concat(PlaceFive);\n    }\n    \n    const finalNewList = newList;\n    setList(finalNewList);\n\n    console.log(list);\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].xCo_ > maxX) {\n        maxX = list[i].xCo_;\n      }\n      if (list[i].xCo_ < minX) {\n        minX = list[i].xCo_;\n      }\n      if (list[i].yCo_ > maxY) {\n        maxY = list[i].yCo_;\n      }\n      if (list[i].yCo_ < minY) {\n         minY = list[i].yCo_;\n      }\n    }\n    console.log(maxX);\n    console.log(maxY);\n    console.log(minX);\n    console.log(minY);\n\n    await findBestHome(minX, maxX, minY, maxY);\n    \n  }\n    useEffect (() => {\n      console.log('You should live at');\n      console.log(bestX);\n      console.log(bestY);\n      console.log({lat: bestX, lng:bestY});\n      setPosition({lat: bestX, lng:bestY});\n    }, [bestX, bestY])\n    \n    async function findBestHome(minX, maxX, minY, maxY) {\n      let bestScore = 99999999;\n      let it = 0;\n      let firstBestX;\n      let firstBestY;\n      let xDiff = (parseFloat(maxX)-parseFloat(minX))/5;\n      let yDiff = (parseFloat(maxY)-parseFloat(minY))/5;\n      while (it < 5) {\n        let it1 = 0;\n        while (it1 < 5) {\n          let testVal = await calculateStrength(parseFloat(minX) + it * parseFloat(xDiff), parseFloat(minY) + it1 * parseFloat(yDiff));\n           //console.log(testVal);\n          if (testVal < bestScore) {\n            //console.log(\"improved\")\n            bestScore = testVal;\n\n            firstBestX = parseFloat(minX) + it *(maxX-minX)/5;\n            firstBestY = parseFloat(minY) + it1 * (maxY-minY)/5;\n          }\n          it1++;\n        }\n        it++;\n      }\n      let newMinX = parseFloat(firstBestX) - 0.5 * ((parseFloat(maxX)-parseFloat(minX))/5);\n      let newMaxX = parseFloat(firstBestX) + 0.5 * ((parseFloat(maxX)-parseFloat(minX))/5);\n      let newMinY = parseFloat(firstBestY) - 0.5 * ((parseFloat(maxY)-parseFloat(minY))/5);\n      let newMaxY = parseFloat(firstBestY) + 0.5 * ((parseFloat(maxY)-parseFloat(minY))/5);\n      //console.log(newMaxY);\n      //console.log(newMinY);\n      xDiff = (parseFloat(newMaxX)-parseFloat(newMinX))/5;\n      yDiff = (parseFloat(newMaxY)-parseFloat(newMinY))/5;\n      it = 0;\n      while (it < 5) {\n        let it1 = 0;\n        while (it1 < 5) {\n          let testVal = await calculateStrength(parseFloat(newMinX) + it * parseFloat(xDiff), parseFloat(newMinY) + it1 * (parseFloat(yDiff)));\n           //console.log(testVal);\n           //console.log(bestScore);\n          if (parseFloat(testVal) < parseFloat(bestScore)) {\n            //console.log(\"improved\")\n            bestScore = testVal;\n            firstBestX = parseFloat(newMinX) + it * parseFloat(xDiff);\n            firstBestY = parseFloat(newMinY) + it1 * parseFloat(yDiff);\n            //console.log(parseFloat(newMinX) + it * parseFloat(xDiff));\n            \n          }\n          it1++;\n        }\n        it++;\n      }\n      //console.log(firstBestX);\n      //console.log(firstBestY);\n      setBestX(parseFloat(firstBestX));\n      setBestY(parseFloat(firstBestY));\n    }\n\n    async function calculateStrength(xCo, yCo) {\n      let totalScore = 0;\n      //console.log(xCo);\n      let dScore = 99999;\n      let bScore = 99999;\n      let wScore = 99999;\n      //console.log(yCo);\n      for (let i = 0; i < list.length; i++) {\n        //console.log((await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')));\n        dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n        bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n        wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n        //setTScore(findRoute(xCo, yCo, PlaceOne.xCo_,PlaceOne.yCo_, 'TRANSIT') * transitPref);\n        //console.log(parseFloat(dScore));\n        //console.log(bScore);\n        //console.log(wScore);\n        let bestScore = 0;\n        if (dScore < bScore && dScore < wScore) {\n          bestScore = dScore;\n        }\n        if (bScore < dScore && bScore < wScore) {\n          bestScore = bScore;\n        }\n        if (wScore < bScore && wScore < dScore) {\n          bestScore = wScore;\n        }\n        let curScore = parseFloat(bestScore) * parseFloat(list[i].freq_);\n        totalScore += parseFloat(curScore);\n        //console.log(totalScore);\n      }\n     return totalScore;\n    }\n\n  function parseTime(inputString) {\n    let regex = /(\\d+) hours (\\d+) mins/;\n    let match = inputString.match(regex);\n    let hours = 0;\n    let mins = 0;\n    //I think I'm still missing some options with days, will have to check later\n    if (!match) {\n      regex = /(\\d+) day (\\d+) hours/;\n      match = inputString.match(regex);\n      if (!match) {\n        regex = /(\\d+) days (\\d+) hours/;\n        match = inputString.match(regex);\n        if (!match) {\n          regex = /(\\d+) hour (\\d+) mins/;\n          match = inputString.match(regex);\n          if (!match) {\n            regex = /(\\d+) hour (\\d+) min/;\n            match = inputString.match(regex);\n            if (!match) {\n              regex = /(\\d+) hours (\\d+) min/;\n              match = inputString.match(regex);\n              if (!match) {\n                regex = /(\\d+) mins/;\n                match = inputString.match(regex);\n                if (!match) {\n                  regex = /(\\d+) mins/;\n                  match = inputString.match(regex);\n                  if (!match) {\n\n                  } else {\n                    hours = 0;\n                    mins = parseInt(match[1], 10);\n                  }\n                } else {\n                  hours = 0;\n                  mins = parseInt(match[1], 10);\n                }\n              } else {\n                hours = parseInt(match[1], 10);\n                mins = parseInt(match[2], 10);\n              }\n            } else {\n              hours = parseInt(match[1], 10); //error occurs at deepest point every time\n              mins = parseInt(match[2], 10); \n            }\n          } else {\n            hours = parseInt(match[1], 10);\n            mins = parseInt(match[2], 10);\n          }\n        } else {\n          hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n          mins = 0;\n        }\n      } else {\n        hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n        mins = 0;\n      }\n    } else {\n      hours = parseInt(match[1], 10);\n      mins = parseInt(match[2], 10);\n    }\n    \n    let result = hours + mins / 60;\n    return result;\n  }\n\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    \n    //console.log(xCo)\n    //console.log(yCo)\n    const {DirectionsService} = await google.maps.importLibrary(\"routes\") \n    const dService = new DirectionsService() //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo)\n    const destination1 = new google.maps.LatLng(xCo1, yCo1)\n\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method,\n    })\n\n    //setDistance(result.routes[0].legs[0].distance.text)\n    //setTravelTime(result.routes[0].legs[0].duration.text)\n    //parse time string and turn into double\n    let time = parseTime(result.routes[0].legs[0].duration.text)\n    // /console.log(time)\n    //console.log(distance)\n    //console.log(result.routes[0].legs[0].duration.text) \n    return time\n  }\n}\n\n\nwindow.App= App;\n\n\n\n/*  function useDirectionsRenderer({dService}) {\n    const isLoaded  = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"],\n    });\n \n   \n    const position2 = new google.maps.LatLng(53.5, 9.8);\n\n    \n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2,\n    })\n    dService.route(request, function(result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}