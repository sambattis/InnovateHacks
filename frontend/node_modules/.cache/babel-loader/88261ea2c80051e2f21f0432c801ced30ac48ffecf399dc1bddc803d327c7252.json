{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sb421\\\\OneDrive\\\\Desktop\\\\NuCasa\\\\NuCasa\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { createRoot } from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { APIProvider, Marker, Map } from \"@vis.gl/react-google-maps\";\nimport Form from \"./components/Form.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [position, setPosition] = useState({\n    lat: 51,\n    lng: 10\n  });\n  const [data, setData] = useState({\n    car: \"\",\n    walk: \"\",\n    bus: \"\",\n    coX: \"\",\n    coY: \"\",\n    coX1: \"\",\n    coY1: \"\",\n    coX2: \"\",\n    coY2: \"\"\n  });\n  const [map, setMap] = useState(null);\n  const [dResponse, setDResponse] = useState(null);\n  const [drivingPref, setDrivingPref] = useState('');\n  const [bikePref, setBikePref] = useState('');\n  const [walkPref, setWalkPref] = useState('');\n  const [transitPref, setTransitPref] = useState('');\n  const [bestX, setBestX] = useState(0);\n  const [bestY, setBestY] = useState(0);\n  const key = process.env.REACT_APP_API_KEY;\n  useEffect(() => {\n    console.log('You should live at', bestX, bestY);\n    setPosition({\n      lat: bestX,\n      lng: bestY\n    });\n  }, [bestY]);\n  useEffect(() => {\n    startCalcs(data);\n  }, [data]);\n  async function startCalcs(data) {\n    let placeOne = Place(data.coX, data.coY, data.freq);\n    let placeTwo = Place(data.coX1, data.coY1, data.freq1);\n    let placeThree = Place(data.coX2, data.coY2, data.freq2);\n    let placeFour = Place(data.coX3, data.coY3, data.freq3);\n    let placeFive = Place(data.coX4, data.coY4, data.freq4);\n    let newList = [placeOne, placeTwo, placeThree, placeFour, placeFive].filter(place => place.xCo_ !== \"\" && place.yCo_ !== \"\" && place.freq_ !== \"\");\n    const [minX, maxX, minY, maxY] = newList.reduce(([minX, maxX, minY, maxY], {\n      xCo_,\n      yCo_\n    }) => [Math.min(minX, xCo_), Math.max(maxX, xCo_), Math.min(minY, yCo_), Math.max(maxY, yCo_)], [90, -90, 90, -90]);\n    await findBestHome(minX, maxX, minY, maxY, newList);\n  }\n  async function findBestHome(minX, maxX, minY, maxY, list) {\n    let bestScore = 99999999;\n    let firstBestX, firstBestY;\n    for (let it = 0; it < 5; it++) {\n      for (let it1 = 0; it1 < 5; it1++) {\n        let testVal = await calculateStrength(minX + it * (maxX - minX) / 5, minY + it1 * (maxY - minY) / 5, list);\n        if (testVal < bestScore) {\n          bestScore = testVal;\n          firstBestX = minX + it * (maxX - minX) / 5;\n          firstBestY = minY + it1 * (maxY - minY) / 5;\n        }\n      }\n    }\n    const newMinX = firstBestX - 0.5 * (maxX - minX) / 5;\n    const newMaxX = firstBestX + 0.5 * (maxX - minX) / 5;\n    const newMinY = firstBestY - 0.5 * (maxY - minY) / 5;\n    const newMaxY = firstBestY + 0.5 * (maxY - minY) / 5;\n    for (let it = 0; it < 5; it++) {\n      for (let it1 = 0; it1 < 5; it1++) {\n        let testVal = await calculateStrength(newMinX + it * (newMaxX - newMinX) / 5, newMinY + it1 * (newMaxY - newMinY) / 5, list);\n        if (testVal < bestScore) {\n          bestScore = testVal;\n          firstBestX = newMinX + it * (newMaxX - newMinX) / 5;\n          firstBestY = newMinY + it1 * (newMaxY - newMinY) / 5;\n        }\n      }\n    }\n    setBestX(firstBestX);\n    setBestY(firstBestY);\n  }\n  async function calculateStrength(xCo, yCo, list) {\n    let totalScore = 0;\n    for (let i = 0; i < list.length; i++) {\n      const dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n      const bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n      const wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n      const bestScore = Math.min(dScore, bScore, wScore);\n      const curScore = parseFloat(bestScore) * parseFloat(list[i].freq_);\n      totalScore += curScore;\n    }\n    return totalScore;\n  }\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps API is not loaded');\n      return;\n    }\n    const {\n      DirectionsService\n    } = await window.google.maps.importLibrary(\"routes\");\n    const dService = new DirectionsService();\n    const origin1 = new google.maps.LatLng(xCo, yCo);\n    const destination1 = new google.maps.LatLng(xCo1, yCo1);\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method\n    });\n    const time = parseTime(result.routes[0].legs[0].duration.text);\n    return time;\n  }\n  function parseTime(inputString) {\n    const regex = /(\\d+) (hour|hours|day|days)? ?(\\d+)? (min|min)?/;\n    const match = inputString.match(regex);\n    let hours = 0,\n      mins = 0;\n    if (match) {\n      var _match$;\n      if ((_match$ = match[2]) !== null && _match$ !== void 0 && _match$.includes('day')) {\n        hours = parseInt(match[1], 10) * 24;\n      } else {\n        hours = parseInt(match[1], 10);\n      }\n      if (match[3]) {\n        mins = parseInt(match[3], 10);\n      }\n    } else {\n      mins = parseInt(inputString, 10);\n    }\n    return hours + mins / 60;\n  }\n  return /*#__PURE__*/_jsxDEV(APIProvider, {\n    apiKey: key,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 16\n          }, this), \" NuCasa \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-map-marker-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"small-text\",\n          children: \"The perfect app for quick location triangulation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split left-panel\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        data: data,\n        setData: setData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split right-panel\",\n      style: {\n        height: \"95vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        zoom: 9,\n        center: position,\n        onLoad: map => setMap(map),\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aQN/TA86Pm5YRlk2AqcNj47xyx0=\");\n_c = App;\nwindow.App = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createRoot","v4","uuidv4","React","useRef","useState","useEffect","APIProvider","Marker","Map","Form","jsxDEV","_jsxDEV","App","position","setPosition","lat","lng","data","setData","car","walk","bus","coX","coY","coX1","coY1","coX2","coY2","map","setMap","dResponse","setDResponse","drivingPref","setDrivingPref","bikePref","setBikePref","walkPref","setWalkPref","transitPref","setTransitPref","bestX","setBestX","bestY","setBestY","key","process","env","REACT_APP_API_KEY","console","log","startCalcs","placeOne","Place","freq","placeTwo","freq1","placeThree","freq2","placeFour","coX3","coY3","freq3","placeFive","coX4","coY4","freq4","newList","filter","place","xCo_","yCo_","freq_","minX","maxX","minY","maxY","reduce","Math","min","max","findBestHome","list","bestScore","firstBestX","firstBestY","it","it1","testVal","calculateStrength","newMinX","newMaxX","newMinY","newMaxY","xCo","yCo","totalScore","i","length","dScore","parseFloat","findRoute","bScore","wScore","curScore","xCo1","yCo1","method","window","google","maps","error","DirectionsService","importLibrary","dService","origin1","LatLng","destination1","result","route","origin","destination","travelMode","time","parseTime","routes","legs","duration","text","inputString","regex","match","hours","mins","_match$","includes","parseInt","apiKey","children","className","fileName","lineNumber","columnNumber","style","height","zoom","center","onLoad","_c","$RefreshReg$"],"sources":["C:/Users/sb421/OneDrive/Desktop/NuCasa/NuCasa/frontend/src/App.js"],"sourcesContent":["\"use client\";\nimport { createRoot } from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { useRef, useState, useEffect } from \"react\";\nimport {\n  APIProvider,\n  Marker,\n  Map,\n} from \"@vis.gl/react-google-maps\";\nimport Form from \"./components/Form.js\";\n\nexport default function App() {\n  const [position, setPosition] = useState({ lat: 51, lng: 10 });\n  const [data, setData] = useState({ car: \"\", walk: \"\", bus: \"\", coX: \"\", coY: \"\", coX1: \"\", coY1: \"\", coX2: \"\", coY2: \"\" });\n  const [map, setMap] = useState(null);\n  const [dResponse, setDResponse] = useState(null);\n  const [drivingPref, setDrivingPref] = useState('');\n  const [bikePref, setBikePref] = useState('');\n  const [walkPref, setWalkPref] = useState('');\n  const [transitPref, setTransitPref] = useState('');\n  const [bestX, setBestX] = useState(0);\n  const [bestY, setBestY] = useState(0);\n  const key = process.env.REACT_APP_API_KEY;\n\n  useEffect(() => {\n    console.log('You should live at', bestX, bestY);\n    setPosition({ lat: bestX, lng: bestY });\n  }, [bestY]);\n\n  useEffect(() => {\n    startCalcs(data);\n  }, [data]);\n\n  async function startCalcs(data) {\n    let placeOne = Place(data.coX, data.coY, data.freq);\n    let placeTwo = Place(data.coX1, data.coY1, data.freq1);\n    let placeThree = Place(data.coX2, data.coY2, data.freq2);\n    let placeFour = Place(data.coX3, data.coY3, data.freq3);\n    let placeFive = Place(data.coX4, data.coY4, data.freq4);\n\n    let newList = [placeOne, placeTwo, placeThree, placeFour, placeFive].filter(\n      place => place.xCo_ !== \"\" && place.yCo_ !== \"\" && place.freq_ !== \"\"\n    );\n\n    const [minX, maxX, minY, maxY] = newList.reduce(\n      ([minX, maxX, minY, maxY], { xCo_, yCo_ }) => [\n        Math.min(minX, xCo_),\n        Math.max(maxX, xCo_),\n        Math.min(minY, yCo_),\n        Math.max(maxY, yCo_),\n      ],\n      [90, -90, 90, -90]\n    );\n\n    await findBestHome(minX, maxX, minY, maxY, newList);\n  }\n\n  async function findBestHome(minX, maxX, minY, maxY, list) {\n    let bestScore = 99999999;\n    let firstBestX, firstBestY;\n\n    for (let it = 0; it < 5; it++) {\n      for (let it1 = 0; it1 < 5; it1++) {\n        let testVal = await calculateStrength(\n          minX + it * (maxX - minX) / 5,\n          minY + it1 * (maxY - minY) / 5,\n          list\n        );\n        if (testVal < bestScore) {\n          bestScore = testVal;\n          firstBestX = minX + it * (maxX - minX) / 5;\n          firstBestY = minY + it1 * (maxY - minY) / 5;\n        }\n      }\n    }\n\n    const newMinX = firstBestX - 0.5 * (maxX - minX) / 5;\n    const newMaxX = firstBestX + 0.5 * (maxX - minX) / 5;\n    const newMinY = firstBestY - 0.5 * (maxY - minY) / 5;\n    const newMaxY = firstBestY + 0.5 * (maxY - minY) / 5;\n\n    for (let it = 0; it < 5; it++) {\n      for (let it1 = 0; it1 < 5; it1++) {\n        let testVal = await calculateStrength(\n          newMinX + it * (newMaxX - newMinX) / 5,\n          newMinY + it1 * (newMaxY - newMinY) / 5,\n          list\n        );\n        if (testVal < bestScore) {\n          bestScore = testVal;\n          firstBestX = newMinX + it * (newMaxX - newMinX) / 5;\n          firstBestY = newMinY + it1 * (newMaxY - newMinY) / 5;\n        }\n      }\n    }\n\n    setBestX(firstBestX);\n    setBestY(firstBestY);\n  }\n\n  async function calculateStrength(xCo, yCo, list) {\n    let totalScore = 0;\n\n    for (let i = 0; i < list.length; i++) {\n      const dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n      const bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n      const wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n\n      const bestScore = Math.min(dScore, bScore, wScore);\n      const curScore = parseFloat(bestScore) * parseFloat(list[i].freq_);\n      totalScore += curScore;\n    }\n\n    return totalScore;\n  }\n\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    if (!window.google || !window.google.maps) {\n      console.error('Google Maps API is not loaded');\n      return;\n    }\n\n    const { DirectionsService } = await window.google.maps.importLibrary(\"routes\");\n    const dService = new DirectionsService();\n\n    const origin1 = new google.maps.LatLng(xCo, yCo);\n    const destination1 = new google.maps.LatLng(xCo1, yCo1);\n\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method,\n    });\n\n    const time = parseTime(result.routes[0].legs[0].duration.text);\n    return time;\n  }\n\n  function parseTime(inputString) {\n    const regex = /(\\d+) (hour|hours|day|days)? ?(\\d+)? (min|min)?/;\n    const match = inputString.match(regex);\n    let hours = 0, mins = 0;\n\n    if (match) {\n      if (match[2]?.includes('day')) {\n        hours = parseInt(match[1], 10) * 24;\n      } else {\n        hours = parseInt(match[1], 10);\n      }\n      if (match[3]) {\n        mins = parseInt(match[3], 10);\n      }\n    } else {\n      mins = parseInt(inputString, 10);\n    }\n\n    return hours + mins / 60;\n  }\n\n  return (\n    <APIProvider apiKey={key}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3> <i className=\"fas fa-home\"></i> NuCasa <i className=\"fas fa-map-marker-alt\"></i></h3>\n          <i className=\"small-text\">The perfect app for quick location triangulation!</i>\n        </header>\n      </div>\n      <div className=\"split left-panel\">\n        <Form data={data} setData={setData} />\n      </div>\n      <div className=\"split right-panel\" style={{ height: \"95vh\" }}>\n        <Map zoom={9} center={position} onLoad={map => setMap(map)}>\n          <Marker position={position} />\n        </Map>\n      </div>\n    </APIProvider>\n  );\n}\n\nwindow.App = App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}