{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sb421\\\\OneDrive\\\\Desktop\\\\NuCasa\\\\NuCasa\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { createRoot } from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { useRef, useState } from \"react\";\n//import * as React from 'react';\nimport { APIProvider, Marker, Map } from \"@vis.gl/react-google-maps\";\nimport Form from \"./components/Form.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nexport default function App() {\n  _s();\n  const [position, setPosition] = useState({\n    lat: 51,\n    lng: 10\n  });\n  const [data, setData] = useState({\n    car: \"\",\n    walk: \"\",\n    bus: \"\",\n    coX: \"\",\n    coY: \"\",\n    coX1: \"\",\n    coY1: \"\",\n    coX2: \"\",\n    coY2: \"\"\n  });\n  useEffect(() => {\n    if (window.google) {\n      const {\n        DirectionsService\n      } = window.google.maps;\n      const dService = new DirectionsService();\n\n      // Your code using dService\n    }\n  }, []);\n  useEffect = (() => {\n    startCalcs(data);\n  }, [data]);\n  const [map, setMap] = useState(null);\n  const [dResponse, setDResponse] = useState(null);\n  const [travelTime, setTravelTime] = useState('');\n  const [distance, setDistance] = useState('');\n  const [drivingPref, setDrivingPref] = useState('');\n  const [bikePref, setBikePref] = useState('');\n  const [walkPref, setWalkPref] = useState('');\n  const [transitPref, setTransitPref] = useState('');\n  //const destinationRef = useRef()\n  //const originRef = useRef()\n  //const travelMethodRef = useRef()\n\n  const Place = function (xCo, yCo, freq) {\n    let xCo_ = xCo;\n    let yCo_ = yCo;\n    let freq_ = freq;\n    return {\n      xCo_,\n      yCo_,\n      freq_\n    };\n  };\n  const [PlaceOne, setPlaceOne] = useState(null);\n  const [PlaceTwo, setPlaceTwo] = useState(null);\n  const [PlaceThree, setPlaceThree] = useState(null);\n  const [PlaceFour, setPlaceFour] = useState(null);\n  const [PlaceFive, setPlaceFive] = useState(null);\n  const [list, setList] = useState([]);\n  const [bestX, setBestX] = useState(0);\n  const [bestY, setBestY] = useState(0);\n  const key = process.env.REACT_APP_API_KEY;\n  console.log(key);\n  return /*#__PURE__*/_jsxDEV(APIProvider, {\n    apiKey: key,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 16\n          }, this), \" NuCasa \", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-map-marker-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"small-text\",\n          children: \"The perfect app for quick location triangulation! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split left-panel \",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        data: data,\n        setData: setData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split right-panel \",\n      style: {\n        height: \"95vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        zoom: 9,\n        center: position,\n        onLoad: map => setMap(map),\n        children: [dResponse && /*#__PURE__*/_jsxDEV(\"useDirectionsRenderer\", {\n          directions: dResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n  //onLoad={map => setMap(map)}\n  //need to hide the childtoparent button\n\n  async function calculateStrength(xCo, yCo) {\n    let totalScore = 0;\n    //console.log(xCo);\n    let dScore = 99999;\n    let bScore = 99999;\n    let wScore = 99999;\n    //console.log(yCo);\n    for (let i = 0; i < list.length; i++) {\n      //console.log((await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')));\n      dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n      bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n      wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n      //setTScore(findRoute(xCo, yCo, PlaceOne.xCo_,PlaceOne.yCo_, 'TRANSIT') * transitPref);\n      //console.log(parseFloat(dScore));\n      //console.log(bScore);\n      //console.log(wScore);\n      let bestScore = 0;\n      if (dScore < bScore && dScore < wScore) {\n        bestScore = dScore;\n      }\n      if (bScore < dScore && bScore < wScore) {\n        bestScore = bScore;\n      }\n      if (wScore < bScore && wScore < dScore) {\n        bestScore = wScore;\n      }\n      //console.log(bestScore);\n      let curScore = parseFloat(bestScore) * parseFloat(list[i].freq_);\n      //console.log(totalScore);\n      // console.log(curScore);\n      //console.log(parseFloat(curScore));\n      totalScore += parseFloat(curScore);\n      //console.log(totalScore);\n    }\n    //console.log(totalScore);\n    return totalScore;\n  }\n  async function findBestHome(minX, maxX, minY, maxY) {\n    let bestScore = 99999999;\n    let it = 0;\n    let firstBestX;\n    let firstBestY;\n    let xDiff = (parseFloat(maxX) - parseFloat(minX)) / 5;\n    let yDiff = (parseFloat(maxY) - parseFloat(minY)) / 5;\n    while (it < 5) {\n      let it1 = 0;\n      while (it1 < 5) {\n        let testVal = await calculateStrength(parseFloat(minX) + it * parseFloat(xDiff), parseFloat(minY) + it1 * parseFloat(yDiff));\n        //console.log(testVal);\n        if (testVal < bestScore) {\n          //console.log(\"improved\")\n          bestScore = testVal;\n          firstBestX = parseFloat(minX) + it * (maxX - minX) / 5;\n          firstBestY = parseFloat(minY) + it1 * (maxY - minY) / 5;\n        }\n        it1++;\n      }\n      it++;\n    }\n    let newMinX = parseFloat(firstBestX) - 0.5 * ((parseFloat(maxX) - parseFloat(minX)) / 5);\n    let newMaxX = parseFloat(firstBestX) + 0.5 * ((parseFloat(maxX) - parseFloat(minX)) / 5);\n    let newMinY = parseFloat(firstBestY) - 0.5 * ((parseFloat(maxY) - parseFloat(minY)) / 5);\n    let newMaxY = parseFloat(firstBestY) + 0.5 * ((parseFloat(maxY) - parseFloat(minY)) / 5);\n    //console.log(newMaxY);\n    //console.log(newMinY);\n    xDiff = (parseFloat(newMaxX) - parseFloat(newMinX)) / 5;\n    yDiff = (parseFloat(newMaxY) - parseFloat(newMinY)) / 5;\n    it = 0;\n    while (it < 5) {\n      let it1 = 0;\n      while (it1 < 5) {\n        let testVal = await calculateStrength(parseFloat(newMinX) + it * parseFloat(xDiff), parseFloat(newMinY) + it1 * parseFloat(yDiff));\n        //console.log(testVal);\n        //console.log(bestScore);\n        if (parseFloat(testVal) < parseFloat(bestScore)) {\n          //console.log(\"improved\")\n          bestScore = testVal;\n          firstBestX = parseFloat(newMinX) + it * parseFloat(xDiff);\n          firstBestY = parseFloat(newMinY) + it1 * parseFloat(yDiff);\n          //console.log(parseFloat(newMinX) + it * parseFloat(xDiff));\n        }\n\n        it1++;\n      }\n      it++;\n    }\n    //console.log(firstBestX);\n    //console.log(firstBestY);\n    setBestX(parseFloat(firstBestX));\n    setBestY(parseFloat(firstBestY));\n  }\n  async function startCalcs(data) {\n    let minX = 90;\n    let maxX = -90;\n    let minY = 90;\n    let maxY = -90;\n    setBikePref(data.bike);\n    setWalkPref(data.walk);\n    setDrivingPref(data.car);\n    setTransitPref(data.transit);\n    setPlaceOne(Place(data.coX, data.coY, data.freq));\n    setPlaceTwo(Place(data.coX1, data.coY1, data.freq1));\n    setPlaceThree(Place(data.coX2, data.coY2, data.freq2));\n    setPlaceFour(Place(data.coX3, data.coY3, data.freq3));\n    setPlaceFive(Place(data.coX4, data.coY4, data.freq4));\n    let newList = [];\n    if (PlaceOne.xCo_ != \"\" && PlaceOne.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached One');\n      newList = newList.concat(PlaceOne);\n    }\n    if (PlaceTwo.xCo_ !== \"\" && PlaceTwo.yCo_ !== \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached Two');\n      newList = newList.concat(PlaceTwo);\n    }\n    if (PlaceThree.xCo_ !== \"\" && PlaceThree.yCo_ !== \"\" && PlaceThree.freq_ != \"\") {\n      console.log('reached Three');\n      newList = newList.concat(PlaceThree);\n    }\n    if (PlaceFour.xCo_ !== \"\" && PlaceFour.yCo_ !== \"\" && PlaceFour.freq_ != \"\") {\n      console.log('reached Four');\n      newList = newList.concat(PlaceFour);\n    }\n    if (PlaceFive.xCo_ != \"\" && PlaceFive.yCo_ != \"\" && PlaceFive.freq_ != \"\") {\n      console.log('reached Five');\n      newList = newList.concat(PlaceFive);\n    }\n    const finalNewList = newList;\n    setList(finalNewList);\n    console.log(list);\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].xCo_ > maxX) {\n        maxX = list[i].xCo_;\n      }\n      if (list[i].xCo_ < minX) {\n        minX = list[i].xCo_;\n      }\n      if (list[i].yCo_ > maxY) {\n        maxY = list[i].yCo_;\n      }\n      if (list[i].yCo_ < minY) {\n        minY = list[i].yCo_;\n      }\n    }\n    console.log(maxX);\n    console.log(maxY);\n    console.log(minX);\n    console.log(minY);\n    await findBestHome(minX, maxX, minY, maxY);\n    console.log('You should live at');\n    console.log(bestX);\n    console.log(bestY);\n    console.log({\n      lat: bestX,\n      lng: bestY\n    });\n    setPosition({\n      lat: bestX,\n      lng: bestY\n    });\n  }\n  function parseTime(inputString) {\n    let regex = /(\\d+) hours (\\d+) mins/;\n    let match = inputString.match(regex);\n    let hours = 0;\n    let mins = 0;\n    //I think I'm still missing some options with days, will have to check later\n    if (!match) {\n      regex = /(\\d+) day (\\d+) hours/;\n      match = inputString.match(regex);\n      if (!match) {\n        regex = /(\\d+) days (\\d+) hours/;\n        match = inputString.match(regex);\n        if (!match) {\n          regex = /(\\d+) hour (\\d+) mins/;\n          match = inputString.match(regex);\n          if (!match) {\n            regex = /(\\d+) hour (\\d+) min/;\n            match = inputString.match(regex);\n            if (!match) {\n              regex = /(\\d+) hours (\\d+) min/;\n              match = inputString.match(regex);\n              if (!match) {\n                regex = /(\\d+) mins/;\n                match = inputString.match(regex);\n                if (!match) {\n                  regex = /(\\d+) mins/;\n                  match = inputString.match(regex);\n                  if (!match) {} else {\n                    hours = 0;\n                    mins = parseInt(match[1], 10);\n                  }\n                } else {\n                  hours = 0;\n                  mins = parseInt(match[1], 10);\n                }\n              } else {\n                hours = parseInt(match[1], 10);\n                mins = parseInt(match[2], 10);\n              }\n            } else {\n              hours = parseInt(match[1], 10); //error occurs at deepest point every time\n              mins = parseInt(match[2], 10);\n            }\n          } else {\n            hours = parseInt(match[1], 10);\n            mins = parseInt(match[2], 10);\n          }\n        } else {\n          hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n          mins = 0;\n        }\n      } else {\n        hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n        mins = 0;\n      }\n    } else {\n      hours = parseInt(match[1], 10);\n      mins = parseInt(match[2], 10);\n    }\n    let result = hours + mins / 60;\n    return result;\n  }\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    //console.log(xCo)\n    //console.log(yCo)\n    const {\n      DirectionsService\n    } = await google.maps.importLibrary(\"routes\");\n    const dService = new DirectionsService(); //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo);\n    const destination1 = new google.maps.LatLng(xCo1, yCo1);\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method\n    });\n\n    //setDistance(result.routes[0].legs[0].distance.text)\n    //setTravelTime(result.routes[0].legs[0].duration.text)\n    //parse time string and turn into double\n    let time = parseTime(result.routes[0].legs[0].duration.text);\n    // /console.log(time)\n    //console.log(distance)\n    //console.log(result.routes[0].legs[0].duration.text) \n    return time;\n  }\n}\n_s(App, \"ISxSHcLYU5C2A/cLucrJmKsQp3Q=\");\n_c = App;\nwindow.App = App;\n\n/*  function useDirectionsRenderer({dService}) {\n    const isLoaded  = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"],\n    });\n \n   \n    const position2 = new google.maps.LatLng(53.5, 9.8);\n\n    \n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2,\n    })\n    dService.route(request, function(result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createRoot","v4","uuidv4","React","useRef","useState","APIProvider","Marker","Map","Form","jsxDEV","_jsxDEV","google","window","App","position","setPosition","lat","lng","data","setData","car","walk","bus","coX","coY","coX1","coY1","coX2","coY2","useEffect","DirectionsService","maps","dService","startCalcs","map","setMap","dResponse","setDResponse","travelTime","setTravelTime","distance","setDistance","drivingPref","setDrivingPref","bikePref","setBikePref","walkPref","setWalkPref","transitPref","setTransitPref","Place","xCo","yCo","freq","xCo_","yCo_","freq_","PlaceOne","setPlaceOne","PlaceTwo","setPlaceTwo","PlaceThree","setPlaceThree","PlaceFour","setPlaceFour","PlaceFive","setPlaceFive","list","setList","bestX","setBestX","bestY","setBestY","key","process","env","REACT_APP_API_KEY","console","log","apiKey","children","className","class","fileName","lineNumber","columnNumber","style","height","zoom","center","onLoad","directions","calculateStrength","totalScore","dScore","bScore","wScore","i","length","parseFloat","findRoute","bestScore","curScore","findBestHome","minX","maxX","minY","maxY","it","firstBestX","firstBestY","xDiff","yDiff","it1","testVal","newMinX","newMaxX","newMinY","newMaxY","bike","transit","freq1","freq2","coX3","coY3","freq3","coX4","coY4","freq4","newList","concat","finalNewList","parseTime","inputString","regex","match","hours","mins","parseInt","result","xCo1","yCo1","method","importLibrary","origin1","LatLng","destination1","route","origin","destination","travelMode","time","routes","legs","duration","text","_c","$RefreshReg$"],"sources":["C:/Users/sb421/OneDrive/Desktop/NuCasa/NuCasa/frontend/src/App.js"],"sourcesContent":["\"use client\";\nimport {createRoot} from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport React, {useRef, useState} from \"react\";\n//import * as React from 'react';\nimport {\n  APIProvider,\n  Marker,\n  Map,\n} from \"@vis.gl/react-google-maps\"\n\nimport Form from \"./components/Form.js\";\n\nconst google = window.google\n\nexport default function App() {\n\n  const [position, setPosition] = useState({lat: 51, lng: 10});\n  const [data, setData] = useState({car: \"\", walk: \"\", bus: \"\", coX: \"\", coY: \"\", coX1: \"\", coY1: \"\", coX2: \"\", coY2: \"\"});\n\n  useEffect(() => {\n    if (window.google) {\n      const { DirectionsService } = window.google.maps;\n      const dService = new DirectionsService();\n  \n      // Your code using dService\n    }\n  }, []);\n useEffect = (() => {\n  startCalcs(data);\n }, [data])\n    \n\n  const [map, setMap] = useState((null))\n  const [dResponse, setDResponse] = useState(null)\n  const [travelTime, setTravelTime] = useState('')\n  const [distance, setDistance] = useState('')\n  const [drivingPref, setDrivingPref] = useState('')\n  const [bikePref, setBikePref] = useState('')\n  const [walkPref, setWalkPref] = useState('')\n  const [transitPref, setTransitPref] = useState('')\n  //const destinationRef = useRef()\n  //const originRef = useRef()\n  //const travelMethodRef = useRef()\n\n  const Place = function(xCo, yCo, freq) {\n    let xCo_ = xCo;\n    let yCo_ = yCo;\n    let freq_ = freq;\n    return { xCo_, yCo_, freq_ };\n  };\n\n  const [PlaceOne, setPlaceOne] = useState(null)\n  const [PlaceTwo, setPlaceTwo] = useState(null)\n  const [PlaceThree, setPlaceThree] = useState(null)\n  const [PlaceFour, setPlaceFour] = useState(null)\n  const [PlaceFive, setPlaceFive] = useState(null)\n\n  const [list, setList] = useState([])\n\n  const [bestX, setBestX] = useState(0)\n  const [bestY, setBestY] = useState(0)\n  const key = process.env.REACT_APP_API_KEY;\n  console.log(key);\n\n  return (\n    <APIProvider apiKey = {key} >\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3> <i class=\"fas fa-home\"></i> NuCasa <i class=\"fas fa-map-marker-alt\"></i></h3>\n        <i className=\"small-text\" >The perfect app for quick location triangulation! </i> \n        </header>\n      </div>\n      <div className=\"split left-panel \">\n        <Form data={data} setData={setData}/>\n      </div>\n      <div className=\"split right-panel \" style = {{height: \"95vh\"} }>\n        <Map zoom = {9} center = {position} onLoad={map => setMap(map)}>\n        {dResponse && (\n            <useDirectionsRenderer directions={dResponse} />\n          )}\n        <Marker position={position} />\n        </Map>\n      </div>\n    </APIProvider>\n    \n  );\n//onLoad={map => setMap(map)}\n//need to hide the childtoparent button\n\n\n\nasync function calculateStrength(xCo, yCo) {\n  let totalScore = 0;\n  //console.log(xCo);\n  let dScore = 99999;\n  let bScore = 99999;\n  let wScore = 99999;\n  //console.log(yCo);\n  for (let i = 0; i < list.length; i++) {\n    //console.log((await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')));\n    dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n    bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n    wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n    //setTScore(findRoute(xCo, yCo, PlaceOne.xCo_,PlaceOne.yCo_, 'TRANSIT') * transitPref);\n    //console.log(parseFloat(dScore));\n    //console.log(bScore);\n    //console.log(wScore);\n    let bestScore = 0;\n    if (dScore < bScore && dScore < wScore) {\n      bestScore = dScore;\n    }\n    if (bScore < dScore && bScore < wScore) {\n      bestScore = bScore;\n    }\n    if (wScore < bScore && wScore < dScore) {\n      bestScore = wScore;\n    }\n    //console.log(bestScore);\n    let curScore = parseFloat(bestScore) * parseFloat(list[i].freq_);\n    //console.log(totalScore);\n   // console.log(curScore);\n    //console.log(parseFloat(curScore));\n    totalScore += parseFloat(curScore);\n    //console.log(totalScore);\n  }\n  //console.log(totalScore);\n return totalScore;\n}\n    \n    async function findBestHome(minX, maxX, minY, maxY) {\n      let bestScore = 99999999;\n      let it = 0;\n      let firstBestX;\n      let firstBestY;\n      let xDiff = (parseFloat(maxX)-parseFloat(minX))/5;\n      let yDiff = (parseFloat(maxY)-parseFloat(minY))/5;\n      while (it < 5) {\n        let it1 = 0;\n        while (it1 < 5) {\n          let testVal = await calculateStrength(parseFloat(minX) + it * parseFloat(xDiff), parseFloat(minY) + it1 * parseFloat(yDiff));\n           //console.log(testVal);\n          if (testVal < bestScore) {\n            //console.log(\"improved\")\n            bestScore = testVal;\n\n            firstBestX = parseFloat(minX) + it *(maxX-minX)/5;\n            firstBestY = parseFloat(minY) + it1 * (maxY-minY)/5;\n          }\n          it1++;\n        }\n        it++;\n      }\n      let newMinX = parseFloat(firstBestX) - 0.5 * ((parseFloat(maxX)-parseFloat(minX))/5);\n      let newMaxX = parseFloat(firstBestX) + 0.5 * ((parseFloat(maxX)-parseFloat(minX))/5);\n      let newMinY = parseFloat(firstBestY) - 0.5 * ((parseFloat(maxY)-parseFloat(minY))/5);\n      let newMaxY = parseFloat(firstBestY) + 0.5 * ((parseFloat(maxY)-parseFloat(minY))/5);\n      //console.log(newMaxY);\n      //console.log(newMinY);\n      xDiff = (parseFloat(newMaxX)-parseFloat(newMinX))/5;\n      yDiff = (parseFloat(newMaxY)-parseFloat(newMinY))/5;\n      it = 0;\n      while (it < 5) {\n        let it1 = 0;\n        while (it1 < 5) {\n          let testVal = await calculateStrength(parseFloat(newMinX) + it * parseFloat(xDiff), parseFloat(newMinY) + it1 * (parseFloat(yDiff)));\n           //console.log(testVal);\n           //console.log(bestScore);\n          if (parseFloat(testVal) < parseFloat(bestScore)) {\n            //console.log(\"improved\")\n            bestScore = testVal;\n            firstBestX = parseFloat(newMinX) + it * parseFloat(xDiff);\n            firstBestY = parseFloat(newMinY) + it1 * parseFloat(yDiff);\n            //console.log(parseFloat(newMinX) + it * parseFloat(xDiff));\n            \n          }\n          it1++;\n        }\n        it++;\n      }\n      //console.log(firstBestX);\n      //console.log(firstBestY);\n      setBestX(parseFloat(firstBestX));\n      setBestY(parseFloat(firstBestY));\n    }\n\n    async function startCalcs(data) {\n      let minX = 90;\n      let maxX = -90;\n      let minY = 90;\n      let maxY = -90;\n      setBikePref(data.bike);\n      setWalkPref(data.walk);\n      setDrivingPref(data.car);\n      setTransitPref(data.transit);\n      setPlaceOne(Place(data.coX, data.coY, data.freq));\n      setPlaceTwo(Place(data.coX1, data.coY1, data.freq1));\n      setPlaceThree(Place(data.coX2, data.coY2, data.freq2));\n      setPlaceFour(Place(data.coX3, data.coY3, data.freq3));\n      setPlaceFive(Place(data.coX4, data.coY4, data.freq4));\n      let newList = [];\n      if (PlaceOne.xCo_ != \"\" && PlaceOne.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n        console.log('reached One');\n        newList = newList.concat(PlaceOne);\n      }\n\n      if (PlaceTwo.xCo_ !== \"\" && PlaceTwo.yCo_ !== \"\" && PlaceOne.freq_ != \"\") {\n        console.log('reached Two');\n        newList = newList.concat(PlaceTwo);\n      }\n      if (PlaceThree.xCo_ !== \"\" && PlaceThree.yCo_ !== \"\" && PlaceThree.freq_ != \"\") {\n        console.log('reached Three');\n        newList = newList.concat(PlaceThree);\n      }\n\n      if (PlaceFour.xCo_ !== \"\" && PlaceFour.yCo_ !== \"\" && PlaceFour.freq_ != \"\") {\n        console.log('reached Four');\n        newList = newList.concat(PlaceFour);\n      }\n\n      if (PlaceFive.xCo_ != \"\" && PlaceFive.yCo_ != \"\" && PlaceFive.freq_ != \"\") {\n        console.log('reached Five');\n        newList = newList.concat(PlaceFive);\n      }\n      \n      const finalNewList = newList;\n      setList(finalNewList);\n\n      console.log(list);\n      for (let i = 0; i < list.length; i++) {\n        if (list[i].xCo_ > maxX) {\n          maxX = list[i].xCo_;\n        }\n        if (list[i].xCo_ < minX) {\n          minX = list[i].xCo_;\n        }\n        if (list[i].yCo_ > maxY) {\n          maxY = list[i].yCo_;\n        }\n        if (list[i].yCo_ < minY) {\n           minY = list[i].yCo_;\n        }\n      }\n      console.log(maxX);\n      console.log(maxY);\n      console.log(minX);\n      console.log(minY);\n\n      await findBestHome(minX, maxX, minY, maxY);\n      console.log('You should live at');\n      console.log(bestX);\n      console.log(bestY);\n      console.log({lat: bestX, lng:bestY});\n      setPosition({lat: bestX, lng:bestY});\n    }\n\n  function parseTime(inputString) {\n    let regex = /(\\d+) hours (\\d+) mins/;\n    let match = inputString.match(regex);\n    let hours = 0;\n    let mins = 0;\n    //I think I'm still missing some options with days, will have to check later\n    if (!match) {\n      regex = /(\\d+) day (\\d+) hours/;\n      match = inputString.match(regex);\n      if (!match) {\n        regex = /(\\d+) days (\\d+) hours/;\n        match = inputString.match(regex);\n        if (!match) {\n          regex = /(\\d+) hour (\\d+) mins/;\n          match = inputString.match(regex);\n          if (!match) {\n            regex = /(\\d+) hour (\\d+) min/;\n            match = inputString.match(regex);\n            if (!match) {\n              regex = /(\\d+) hours (\\d+) min/;\n              match = inputString.match(regex);\n              if (!match) {\n                regex = /(\\d+) mins/;\n                match = inputString.match(regex);\n                if (!match) {\n                  regex = /(\\d+) mins/;\n                  match = inputString.match(regex);\n                  if (!match) {\n\n                  } else {\n                    hours = 0;\n                    mins = parseInt(match[1], 10);\n                  }\n                } else {\n                  hours = 0;\n                  mins = parseInt(match[1], 10);\n                }\n              } else {\n                hours = parseInt(match[1], 10);\n                mins = parseInt(match[2], 10);\n              }\n            } else {\n              hours = parseInt(match[1], 10); //error occurs at deepest point every time\n              mins = parseInt(match[2], 10); \n            }\n          } else {\n            hours = parseInt(match[1], 10);\n            mins = parseInt(match[2], 10);\n          }\n        } else {\n          hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n          mins = 0;\n        }\n      } else {\n        hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n        mins = 0;\n      }\n    } else {\n      hours = parseInt(match[1], 10);\n      mins = parseInt(match[2], 10);\n    }\n    \n    let result = hours + mins / 60;\n    return result;\n  }\n\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    \n    //console.log(xCo)\n    //console.log(yCo)\n    const {DirectionsService} = await google.maps.importLibrary(\"routes\") \n    const dService = new DirectionsService() //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo)\n    const destination1 = new google.maps.LatLng(xCo1, yCo1)\n\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method,\n    })\n\n    //setDistance(result.routes[0].legs[0].distance.text)\n    //setTravelTime(result.routes[0].legs[0].duration.text)\n    //parse time string and turn into double\n    let time = parseTime(result.routes[0].legs[0].duration.text)\n    // /console.log(time)\n    //console.log(distance)\n    //console.log(result.routes[0].legs[0].duration.text) \n    return time\n  }\n}\n\n\nwindow.App= App;\n\n\n\n/*  function useDirectionsRenderer({dService}) {\n    const isLoaded  = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"],\n    });\n \n   \n    const position2 = new google.maps.LatLng(53.5, 9.8);\n\n    \n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2,\n    })\n    dService.route(request, function(result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}