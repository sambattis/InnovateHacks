{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sb421\\\\OneDrive\\\\Desktop\\\\InnovateHacks_Hackathon\\\\frontend\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport { createRoot } from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { useRef, useState } from \"react\";\n//import * as React from 'react';\nimport { APIProvider, useDirectionService, useApiIsLoaded, useAutocomplete, Marker, Map, AdvancedMarker, useDirectionsRenderer, useMapsLibrary, Pin, InfoWindow, AutocompleteProps } from \"@vis.gl/react-google-maps\";\nimport Multiple from \"./components/Form.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nexport default function App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [selected, setSelected] = useState(null);\n\n  // const position = {lat: 51, lng: 9}; \n  const [position, setPosition] = useState({\n    lat: 51,\n    lng: 10\n  });\n  // const [data, setData] = useState(10); passes all data from from to map\n  const [data, setData] = useState({\n    car: \"\",\n    walk: \"\",\n    bus: \"\",\n    coX: \"\",\n    coY: \"\",\n    coX1: \"\",\n    coY1: \"\",\n    coX2: \"\",\n    coY2: \"\"\n  });\n  const childToParent = childdata => {\n    setData(childdata);\n    findRouteHelper(data);\n    //console.log(data);\n  };\n\n  const [map, setMap] = useState(null);\n  const [dResponse, setDResponse] = useState(null);\n  const [travelTime, setTravelTime] = useState('');\n  const [distance, setDistance] = useState('');\n  const [drivingPref, setDrivingPref] = useState('');\n  const [bikePref, setBikePref] = useState('');\n  const [walkPref, setWalkPref] = useState('');\n  const [transitPref, setTransitPref] = useState('');\n  const destinationRef = useRef();\n  const originRef = useRef();\n  const travelMethodRef = useRef();\n  const Place = function (xCo, yCo, freq) {\n    let xCo_ = xCo;\n    let yCo_ = yCo;\n    let freq_ = freq;\n    return {\n      xCo_,\n      yCo_,\n      freq_\n    };\n  };\n  const [PlaceOne, setPlaceOne] = useState(null);\n  const [PlaceTwo, setPlaceTwo] = useState(null);\n  const [PlaceThree, setPlaceThree] = useState(null);\n  const [PlaceFour, setPlaceFour] = useState(null);\n  const [PlaceFive, setPlaceFive] = useState(null);\n  const [list, setList] = useState([]);\n  const [bestX, setBestX] = useState(0);\n  const [bestY, setBestY] = useState(0);\n  return /*#__PURE__*/_jsxDEV(APIProvider, {\n    apiKey: process.env.REACT_APP_API_KEY,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h\", {\n          children: \"NuCasa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-4\",\n          onClick: () => findRouteHelper(data),\n          children: \"testDirections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split left-panel \",\n      children: [/*#__PURE__*/_jsxDEV(Multiple, {\n        childToParent: childToParent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: childToParent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        primary: true,\n        onClick: () => childToParent(data),\n        children: \"Click Child\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split right-panel \",\n      style: {\n        height: \"97vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        zoom: 9,\n        center: position,\n        onLoad: map => setMap(map),\n        children: [dResponse && /*#__PURE__*/_jsxDEV(\"useDirectionsRenderer\", {\n          directions: dResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n  //onLoad={map => setMap(map)}\n  //need to hide the childtoparent button\n\n  async function calculateStrength(xCo, yCo) {\n    let totalScore = 0;\n    //console.log(xCo);\n    //console.log(yCo);\n    for (let i = 0; i < list.length; i++) {\n      //console.log((await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')));\n      let dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n      let bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n      let wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_, list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n      //setTScore(findRoute(xCo, yCo, PlaceOne.xCo_,PlaceOne.yCo_, 'TRANSIT') * transitPref);\n\n      //console.log(bScore);\n      //console.log(wScore);\n      let bestScore = 0;\n      if (dScore < bScore && dScore < wScore) {\n        bestScore = dScore;\n      }\n      if (bScore < dScore && bScore < wScore) {\n        bestScore = bScore;\n      }\n      if (wScore < bScore && wScore < dScore) {\n        bestScore = wScore;\n      }\n      let placeOneScore = bestScore * parseFloat(PlaceOne.freq_);\n      totalScore += placeOneScore;\n    }\n    //console.log(totalScore);\n    return totalScore;\n  }\n  function useDirectionsRenderer({\n    dService\n  }) {\n    _s();\n    const isLoaded = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"]\n    });\n    const position2 = new google.maps.LatLng(53.5, 9.8);\n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2\n    });\n    dService.route(request, function (result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }\n  _s(useDirectionsRenderer, \"oNRLHFkVsI+kv7SCj7zxS3Lk62k=\", false, function () {\n    return [useApiIsLoaded, useMapsLibrary];\n  });\n  async function findBestHome(minX, maxX, minY, maxY) {\n    let maxScore = 0;\n    let it = 0;\n    let it1 = 0;\n    while (it < 9) {\n      while (it1 < 9) {\n        let testVal = await calculateStrength(parseFloat(minX) + it * (maxY - minY) / 9, parseFloat(minY) + it1 * (maxY - minY) / 9);\n        //console.log(testVal);\n        if (testVal > maxScore) {\n          //console.log(\"improved\")\n          maxScore = testVal;\n          setBestX(parseFloat(minX) + it * (maxX - minX) / 9);\n          setBestY(parseFloat(minY) + it1 * (maxY - minY) / 9);\n        }\n        it1++;\n      }\n      let testVal = await calculateStrength(parseFloat(minX) + it * (maxY - minY) / 9, parseFloat(minY) + it1 * (maxY - minY) / 9);\n      if (testVal > maxScore) {\n        //console.log(\"improved\")\n        maxScore = testVal;\n        setBestX(parseFloat(minX) + it * (maxX - minX) / 9);\n        setBestY(parseFloat(minY) + it1 * (maxY - minY) / 9);\n      }\n      it++;\n    }\n    /*\n    let newMinX = bestX - (maxX-minX)/9;\n    let newMaxX = bestX + (maxX-minX)/9;\n    let newMinY = bestY - (maxY-minY)/9;\n    let newMaxY = bestY + (maxY-minY)/9;\n     while (it < 9) {\n      while (it1 < 9) {\n        let testVal = calculateStrength(newMinX + it *(newMaxX-newMinX)/9, newMinY + it1 * (newMaxY-newMinY)/9);\n        if (testVal > maxScore) {\n          maxScore = testVal;\n          setBestX(minX + it *(newMaxX-newMinX)/9);\n          setBestY(minY + it1 * (newMaxY-newMinY)/9);\n        }\n        it1++;\n      }\n      it++;\n    }\n    */\n  }\n\n  async function findRouteHelper(data) {\n    let minX = 999;\n    let maxX = -999;\n    let minY = 999;\n    let maxY = -999;\n    setBikePref(data.bike);\n    setWalkPref(data.walk);\n    setDrivingPref(data.car);\n    setTransitPref(data.transit);\n    setPlaceOne(Place(data.coX, data.coY, data.freq));\n    setPlaceTwo(Place(data.coX1, data.coY1, data.freq1));\n    setPlaceThree(Place(data.coX2, data.coY2, data.freq2));\n    setPlaceFour(Place(data.coX3, data.coY3, data.freq3));\n    setPlaceFive(Place(data.coX4, data.coY4, data.freq4));\n    let newList = [];\n    if (PlaceOne.xCo_ != \"\" && PlaceOne.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached One');\n      newList = newList.concat(PlaceOne);\n    }\n    if (PlaceTwo.xCo_ != \"\" && PlaceTwo.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n      console.log('reached Two');\n      newList = newList.concat(PlaceTwo);\n    }\n    if (PlaceThree.xCo_ != \"\" && PlaceThree.yCo_ != \"\" && PlaceThree.freq_ != \"\") {\n      console.log('reached Three');\n      newList = newList.concat(PlaceThree);\n    }\n    if (PlaceFour.xCo_ != \"\" && PlaceFour.yCo_ != \"\" && PlaceFour.freq_ != \"\") {\n      console.log('reached Four');\n      newList = newList.concat(PlaceFour);\n    }\n    if (PlaceFive.xCo_ != \"\" && PlaceFive.yCo_ != \"\" && PlaceFive.freq_ != \"\") {\n      console.log('reached Five');\n      newList = newList.concat(PlaceFive);\n    }\n    const finalNewList = newList;\n    setList(finalNewList);\n    console.log(list);\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].xCo_ > maxX) {\n        maxX = list[i].xCo_;\n      }\n      if (list[i].xCo_ < minX) {\n        minX = list[i].xCo_;\n      }\n      if (list[i].yCo_ > maxY) {\n        maxY = list[i].yCo_;\n      }\n      if (list[i].yCo_ < minY) {\n        minY = list[i].yCo_;\n      }\n    }\n    console.log(maxX);\n    console.log(maxY);\n    console.log(minX);\n    console.log(minY);\n    await findBestHome(minX, maxX, minY, maxY);\n    console.log('You should live at');\n    console.log({\n      lat: bestX,\n      lng: bestY\n    });\n    setPosition({\n      lat: bestX,\n      lng: bestY\n    });\n  }\n  function parseTime(inputString) {\n    let regex = /(\\d+) hours (\\d+) mins/;\n    let match = inputString.match(regex);\n    let hours = 0;\n    let mins = 0;\n    //I think I'm still missing some options with days, will have to check later\n    if (!match) {\n      regex = /(\\d+) day (\\d+) hours/;\n      match = inputString.match(regex);\n      if (!match) {\n        regex = /(\\d+) days (\\d+) hours/;\n        match = inputString.match(regex);\n        if (!match) {\n          regex = /(\\d+) hour (\\d+) mins/;\n          match = inputString.match(regex);\n          if (!match) {\n            regex = /(\\d+) hour (\\d+) min/;\n            match = inputString.match(regex);\n            if (!match) {\n              regex = /(\\d+) hours (\\d+) min/;\n              match = inputString.match(regex);\n              if (!match) {\n                regex = /(\\d+) mins/;\n                match = inputString.match(regex);\n                if (!match) {\n                  regex = /(\\d+) mins/;\n                  match = inputString.match(regex);\n                  if (!match) {} else {\n                    hours = 0;\n                    mins = parseInt(match[1], 10);\n                  }\n                } else {\n                  hours = 0;\n                  mins = parseInt(match[1], 10);\n                }\n              } else {\n                hours = parseInt(match[1], 10);\n                mins = parseInt(match[2], 10);\n              }\n            } else {\n              hours = parseInt(match[1], 10); //error occurs at deepest point every time\n              mins = parseInt(match[2], 10);\n            }\n          } else {\n            hours = parseInt(match[1], 10);\n            mins = parseInt(match[2], 10);\n          }\n        } else {\n          hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n          mins = 0;\n        }\n      } else {\n        hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n        mins = 0;\n      }\n    } else {\n      hours = parseInt(match[1], 10);\n      mins = parseInt(match[2], 10);\n    }\n    let result = hours + mins / 60;\n    return result;\n  }\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    //console.log(xCo)\n    //console.log(yCo)\n    const {\n      DirectionsService\n    } = await google.maps.importLibrary(\"routes\");\n    const dService = new DirectionsService(); //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo);\n    const destination1 = new google.maps.LatLng(xCo1, yCo1);\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method\n    });\n    setDistance(result.routes[0].legs[0].distance.text);\n    setTravelTime(result.routes[0].legs[0].duration.text);\n    //parse time string and turn into double\n    let time = parseTime(result.routes[0].legs[0].duration.text);\n    // /console.log(time)\n    //console.log(distance)\n    //console.log(result.routes[0].legs[0].duration.text) \n    return time;\n  }\n}\n_s2(App, \"ezZBiHVwpm1azOY97vxGZL4giLs=\");\n_c = App;\nwindow.App = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s2","$RefreshSig$","createRoot","v4","uuidv4","React","useRef","useState","APIProvider","useDirectionService","useApiIsLoaded","useAutocomplete","Marker","Map","AdvancedMarker","useDirectionsRenderer","useMapsLibrary","Pin","InfoWindow","AutocompleteProps","Multiple","jsxDEV","_jsxDEV","google","window","App","_s","selected","setSelected","position","setPosition","lat","lng","data","setData","car","walk","bus","coX","coY","coX1","coY1","coX2","coY2","childToParent","childdata","findRouteHelper","map","setMap","dResponse","setDResponse","travelTime","setTravelTime","distance","setDistance","drivingPref","setDrivingPref","bikePref","setBikePref","walkPref","setWalkPref","transitPref","setTransitPref","destinationRef","originRef","travelMethodRef","Place","xCo","yCo","freq","xCo_","yCo_","freq_","PlaceOne","setPlaceOne","PlaceTwo","setPlaceTwo","PlaceThree","setPlaceThree","PlaceFour","setPlaceFour","PlaceFive","setPlaceFive","list","setList","bestX","setBestX","bestY","setBestY","apiKey","process","env","REACT_APP_API_KEY","children","className","fileName","lineNumber","columnNumber","onClick","primary","style","height","zoom","center","onLoad","directions","calculateStrength","totalScore","i","length","dScore","parseFloat","findRoute","bScore","wScore","bestScore","placeOneScore","dService","isLoaded","googleMapsApiKey","libraries","position2","maps","LatLng","directionsRenderer","request","route","travelMode","destination","origin","result","status","setDirections","findBestHome","minX","maxX","minY","maxY","maxScore","it","it1","testVal","bike","transit","freq1","freq2","coX3","coY3","freq3","coX4","coY4","freq4","newList","console","log","concat","finalNewList","parseTime","inputString","regex","match","hours","mins","parseInt","xCo1","yCo1","method","DirectionsService","importLibrary","origin1","destination1","routes","legs","text","duration","time","_c","$RefreshReg$"],"sources":["C:/Users/sb421/OneDrive/Desktop/InnovateHacks_Hackathon/frontend/src/App.js"],"sourcesContent":["\"use client\";\nimport {createRoot} from 'react-dom/client';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport React, {useRef, useState} from \"react\";\n//import * as React from 'react';\nimport {\n  APIProvider,\n  useDirectionService,\n  useApiIsLoaded,\n  useAutocomplete,\n  Marker,\n  Map,\n  AdvancedMarker,\n  useDirectionsRenderer,\nuseMapsLibrary,\n  Pin,\n  InfoWindow,\n  AutocompleteProps,\n} from \"@vis.gl/react-google-maps\"\n\nimport Multiple from \"./components/Form.js\";\n\nconst google = window.google\n\nexport default function App() {\n\n  const [selected, setSelected] = useState(null)\n\n  // const position = {lat: 51, lng: 9}; \n  const [position, setPosition] = useState({lat: 51, lng: 10});\n    // const [data, setData] = useState(10); passes all data from from to map\n  const [data, setData] = useState({car: \"\",walk: \"\",bus: \"\",coX: \"\",coY: \"\",coX1: \"\",coY1: \"\",coX2: \"\", coY2: \"\"});\n\n  const childToParent = (childdata) => {\n    setData(childdata);\n    findRouteHelper(data);\n    //console.log(data);\n  }\n\n  const [map, setMap] = useState((null))\n  const [dResponse, setDResponse] = useState(null)\n  const [travelTime, setTravelTime] = useState('')\n  const [distance, setDistance] = useState('')\n  const [drivingPref, setDrivingPref] = useState('')\n  const [bikePref, setBikePref] = useState('')\n  const [walkPref, setWalkPref] = useState('')\n  const [transitPref, setTransitPref] = useState('')\n  const destinationRef = useRef()\n  const originRef = useRef()\n  const travelMethodRef = useRef()\n\n  const Place = function(xCo, yCo, freq) {\n    let xCo_ = xCo;\n    let yCo_ = yCo;\n    let freq_ = freq;\n    return { xCo_, yCo_, freq_ };\n  };\n\n  const [PlaceOne, setPlaceOne] = useState(null)\n  const [PlaceTwo, setPlaceTwo] = useState(null)\n  const [PlaceThree, setPlaceThree] = useState(null)\n  const [PlaceFour, setPlaceFour] = useState(null)\n  const [PlaceFive, setPlaceFive] = useState(null)\n\n  const [list, setList] = useState([])\n\n  const [bestX, setBestX] = useState(0)\n  const [bestY, setBestY] = useState(0)\n\n  return (\n    \n    <APIProvider apiKey = {process.env.REACT_APP_API_KEY} >\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h>NuCasa</h>\n          <button className= \"button-4\" onClick ={() =>findRouteHelper(data)}>testDirections</button>\n        </header>\n      </div>\n     \n      <div className=\"split left-panel \">\n        <Multiple childToParent={childToParent}/>\n          <p>{childToParent}</p>\n          <button primary onClick={() => childToParent(data)}>Click Child</button> \n      </div>\n\n\n      <div className=\"split right-panel \" style = {{height: \"97vh\"} }>\n        <Map zoom = {9} center = {position} onLoad={map => setMap(map)}>\n        {dResponse && (\n            <useDirectionsRenderer directions={dResponse} />\n          )}\n        <Marker position={position} />\n        </Map>\n      </div>\n    </APIProvider>\n    \n  );\n//onLoad={map => setMap(map)}\n//need to hide the childtoparent button\n\n\n\nasync function calculateStrength(xCo, yCo) {\n  let totalScore = 0;\n  //console.log(xCo);\n  //console.log(yCo);\n  for (let i = 0; i < list.length; i++) {\n    //console.log((await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')));\n    let dScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'DRIVING')) * parseFloat(drivingPref);\n    let bScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'BICYCLING')) * parseFloat(bikePref);\n    let wScore = parseFloat(await findRoute(xCo, yCo, list[i].xCo_,list[i].yCo_, 'WALKING')) * parseFloat(walkPref);\n    //setTScore(findRoute(xCo, yCo, PlaceOne.xCo_,PlaceOne.yCo_, 'TRANSIT') * transitPref);\n    \n    //console.log(bScore);\n    //console.log(wScore);\n    let bestScore = 0;\n    if (dScore < bScore && dScore < wScore) {\n      bestScore = dScore;\n    }\n    if (bScore < dScore && bScore < wScore) {\n      bestScore = bScore;\n    }\n    if (wScore < bScore && wScore < dScore) {\n      bestScore = wScore;\n    }\n    let placeOneScore = bestScore * parseFloat(PlaceOne.freq_);\n    totalScore += placeOneScore;\n  }\n  //console.log(totalScore);\n return totalScore;\n}\n\n  function useDirectionsRenderer({dService}) {\n    const isLoaded  = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"],\n    });\n \n   \n    const position2 = new google.maps.LatLng(53.5, 9.8);\n\n    \n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2,\n    })\n    dService.route(request, function(result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }\n    \n    async function findBestHome(minX, maxX, minY, maxY) {\n      let maxScore = 0;\n      let it = 0;\n      let it1 = 0;\n      while (it < 9) {\n        while (it1 < 9) {\n          let testVal = await calculateStrength(parseFloat(minX) + it * (maxY-minY)/9, parseFloat(minY) + it1 * (maxY-minY)/9);\n          //console.log(testVal);\n          if (testVal > maxScore) {\n            //console.log(\"improved\")\n            maxScore = testVal;\n            setBestX(parseFloat(minX) + it *(maxX-minX)/9);\n            setBestY(parseFloat(minY) + it1 * (maxY-minY)/9);\n          }\n          it1++;\n        }\n        let testVal = await calculateStrength(parseFloat(minX) + it * (maxY-minY)/9, parseFloat(minY) + it1 * (maxY-minY)/9);\n          if (testVal > maxScore) {\n            //console.log(\"improved\")\n            maxScore = testVal;\n            setBestX(parseFloat(minX) + it *(maxX-minX)/9);\n            setBestY(parseFloat(minY) + it1 * (maxY-minY)/9);\n          }\n        it++;\n      }\n      /*\n      let newMinX = bestX - (maxX-minX)/9;\n      let newMaxX = bestX + (maxX-minX)/9;\n      let newMinY = bestY - (maxY-minY)/9;\n      let newMaxY = bestY + (maxY-minY)/9;\n\n      while (it < 9) {\n        while (it1 < 9) {\n          let testVal = calculateStrength(newMinX + it *(newMaxX-newMinX)/9, newMinY + it1 * (newMaxY-newMinY)/9);\n          if (testVal > maxScore) {\n            maxScore = testVal;\n            setBestX(minX + it *(newMaxX-newMinX)/9);\n            setBestY(minY + it1 * (newMaxY-newMinY)/9);\n          }\n          it1++;\n        }\n        it++;\n      }\n      */\n    }\n\n    async function findRouteHelper(data) {\n      let minX = 999;\n      let maxX = -999;\n      let minY = 999;\n      let maxY = -999;\n      setBikePref(data.bike);\n      setWalkPref(data.walk);\n      setDrivingPref(data.car);\n      setTransitPref(data.transit);\n      setPlaceOne(Place(data.coX, data.coY, data.freq));\n      setPlaceTwo(Place(data.coX1, data.coY1, data.freq1));\n      setPlaceThree(Place(data.coX2, data.coY2, data.freq2));\n      setPlaceFour(Place(data.coX3, data.coY3, data.freq3));\n      setPlaceFive(Place(data.coX4, data.coY4, data.freq4));\n      let newList = [];\n      if (PlaceOne.xCo_ != \"\" && PlaceOne.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n        console.log('reached One');\n        newList = newList.concat(PlaceOne);\n      }\n\n      if (PlaceTwo.xCo_ != \"\" && PlaceTwo.yCo_ != \"\" && PlaceOne.freq_ != \"\") {\n        console.log('reached Two');\n        newList = newList.concat(PlaceTwo);\n      }\n      if (PlaceThree.xCo_ != \"\" && PlaceThree.yCo_ != \"\" && PlaceThree.freq_ != \"\") {\n        console.log('reached Three');\n        newList = newList.concat(PlaceThree);\n      }\n\n      if (PlaceFour.xCo_ != \"\" && PlaceFour.yCo_ != \"\" && PlaceFour.freq_ != \"\") {\n        console.log('reached Four');\n        newList = newList.concat(PlaceFour);\n      }\n\n      if (PlaceFive.xCo_ != \"\" && PlaceFive.yCo_ != \"\" && PlaceFive.freq_ != \"\") {\n        console.log('reached Five');\n        newList = newList.concat(PlaceFive);\n      }\n      \n      const finalNewList = newList;\n      setList(finalNewList);\n\n      console.log(list);\n      for (let i = 0; i < list.length; i++) {\n        if (list[i].xCo_ > maxX) {\n          maxX = list[i].xCo_;\n        }\n        if (list[i].xCo_ < minX) {\n          minX = list[i].xCo_;\n        }\n        if (list[i].yCo_ > maxY) {\n          maxY = list[i].yCo_;\n        }\n        if (list[i].yCo_ < minY) {\n           minY = list[i].yCo_;\n        }\n      }\n      console.log(maxX);\n      console.log(maxY);\n      console.log(minX);\n      console.log(minY);\n\n      await findBestHome(minX, maxX, minY, maxY);\n      console.log('You should live at');\n      console.log({lat: bestX, lng:bestY});\n      setPosition({lat: bestX, lng:bestY});\n    }\n\n  function parseTime(inputString) {\n    let regex = /(\\d+) hours (\\d+) mins/;\n    let match = inputString.match(regex);\n    let hours = 0;\n    let mins = 0;\n    //I think I'm still missing some options with days, will have to check later\n    if (!match) {\n      regex = /(\\d+) day (\\d+) hours/;\n      match = inputString.match(regex);\n      if (!match) {\n        regex = /(\\d+) days (\\d+) hours/;\n        match = inputString.match(regex);\n        if (!match) {\n          regex = /(\\d+) hour (\\d+) mins/;\n          match = inputString.match(regex);\n          if (!match) {\n            regex = /(\\d+) hour (\\d+) min/;\n            match = inputString.match(regex);\n            if (!match) {\n              regex = /(\\d+) hours (\\d+) min/;\n              match = inputString.match(regex);\n              if (!match) {\n                regex = /(\\d+) mins/;\n                match = inputString.match(regex);\n                if (!match) {\n                  regex = /(\\d+) mins/;\n                  match = inputString.match(regex);\n                  if (!match) {\n\n                  } else {\n                    hours = 0;\n                    mins = parseInt(match[1], 10);\n                  }\n                } else {\n                  hours = 0;\n                  mins = parseInt(match[1], 10);\n                }\n              } else {\n                hours = parseInt(match[1], 10);\n                mins = parseInt(match[2], 10);\n              }\n            } else {\n              hours = parseInt(match[1], 10); //error occurs at deepest point every time\n              mins = parseInt(match[2], 10); \n            }\n          } else {\n            hours = parseInt(match[1], 10);\n            mins = parseInt(match[2], 10);\n          }\n        } else {\n          hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n          mins = 0;\n        }\n      } else {\n        hours = parseInt(match[1] * 24, 10) + parseInt(match[2], 10);\n        mins = 0;\n      }\n    } else {\n      hours = parseInt(match[1], 10);\n      mins = parseInt(match[2], 10);\n    }\n    \n    let result = hours + mins / 60;\n    return result;\n  }\n\n  async function findRoute(xCo, yCo, xCo1, yCo1, method) {\n    \n    //console.log(xCo)\n    //console.log(yCo)\n    const {DirectionsService} = await google.maps.importLibrary(\"routes\") \n    const dService = new DirectionsService //added() here idk why it worked\n\n    const origin1 = new google.maps.LatLng(xCo, yCo)\n    const destination1 = new google.maps.LatLng(xCo1, yCo1)\n\n    const result = await dService.route({\n      origin: origin1,\n      destination: destination1,\n      travelMode: method,\n    })\n\n    setDistance(result.routes[0].legs[0].distance.text)\n    setTravelTime(result.routes[0].legs[0].duration.text)\n    //parse time string and turn into double\n    let time = parseTime(result.routes[0].legs[0].duration.text)\n    // /console.log(time)\n    //console.log(distance)\n    //console.log(result.routes[0].legs[0].duration.text) \n    return time\n  }\n}\n\n\nwindow.App= App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}