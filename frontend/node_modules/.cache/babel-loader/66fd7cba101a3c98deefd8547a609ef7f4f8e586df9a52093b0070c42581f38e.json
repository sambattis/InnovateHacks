{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sb421\\\\OneDrive\\\\Desktop\\\\InnovateHacks_Hackathon\\\\frontend\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\n//import * as React from 'react';\n\nimport { APIProvider, useDirectionService, useApiIsLoaded, Map, AdvancedMarker, useMapsLibrary, Pin, InfoWindow, AutocompleteProps } from \"@vis.gl/react-google-maps\";\nimport Multiple from \"./components/Form.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\nexport default function App() {\n  _s2();\n  var _s = $RefreshSig$();\n  /*\n  const isLoaded  = useApiIsLoaded({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries: [\"places\"],\n  });\n    if (!isLoaded) return <div>Loading...</div>;\n  return <MapA />;\n  }\n  function MapA() {\n  */\n\n  // const position = {lat: 51, lng: 9}; \n  const [position, setPosition] = useState({\n    lat: 51,\n    lng: 9\n  });\n  // const [data, setData] = useState(10); passes all data from from to map\n  const [data, setData] = useState({\n    car: \"\",\n    walk: \"\",\n    bus: \"\",\n    add1: 10,\n    add2: 40,\n    add3: 29,\n    add4: \"\",\n    add5: \"\"\n  });\n  const childToParent = childdata => {\n    setData(childdata);\n    console.log(data);\n  };\n  const [map, setMap] = useState(null);\n  const [dResponse, setDResponse] = useState(null);\n  const [travelTime, setTravelTime] = useState('');\n  const [distance, setDistance] = useState('');\n  const destinationRef = useRef();\n  const originRef = useRef();\n  const travelMethodRef = useRef();\n\n  //destinationRef = position\n  //originRef = position2\n  //{process.env.REACT_APP_API_KEY}\n\n  return /*#__PURE__*/_jsxDEV(APIProvider, {\n    apiKey: process.env.REACT_APP_API_KEY,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h\", {\n          children: \"NuCasa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => findRoute(data),\n          children: \"testDirections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"split left-panel \",\n      children: [/*#__PURE__*/_jsxDEV(Multiple, {\n        childToParent: childToParent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: childToParent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        primary: true,\n        onClick: () => childToParent(data),\n        children: \"Click Child\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"split right-panel \",\n      style: {\n        height: \"97vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        zoom: 9,\n        center: position,\n        onLoad: map => setMap(map)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n  //onLoad={map => setMap(map)}\n\n  function useDirectionsRenderer({\n    dService\n  }) {\n    _s();\n    const isLoaded = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"]\n    });\n    const position2 = new google.maps.LatLng(53.5, 9.8);\n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2\n    });\n    dService.route(request, function (result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }\n  _s(useDirectionsRenderer, \"oNRLHFkVsI+kv7SCj7zxS3Lk62k=\", false, function () {\n    return [useApiIsLoaded, useMapsLibrary];\n  });\n  const test = 5;\n  async function findBestHome(data) {}\n  async function findRoute(data) {\n    // const position2 = new google.maps.LatLng(53.5, 9.8);\n    const position1 = new google.maps.LatLng(data.add1, data.add1);\n    const position2 = new google.maps.LatLng(data.add2, data.add2);\n    const position3 = new google.maps.LatLng(data.add3, data.add3);\n\n    //UNSUCESSFUL: TRYING to manipulate visual of map based on positon, ideally this will be the optimal living location\n    // setPosition({lat: data.add1, lng: 9});\n\n    const {\n      DirectionsService\n    } = await google.maps.importLibrary(\"routes\");\n    const dService = new DirectionsService(); //added() here idk why it worked\n\n    //here is when we need to do something with 3 addresses\n\n    const result = await dService.route({\n      destination: position1,\n      origin: position3,\n      travelMode: 'DRIVING'\n    });\n\n    // findBestHome(data); \n\n    setDistance(result.routes[0].legs[0].distance.text);\n    setTravelTime(result.routes[0].legs[0].duration.text);\n    console.log(distance);\n    console.log(travelTime);\n  }\n}\n_s2(App, \"6SAhQG9F9xe5wPendkDHg8C/dMw=\");\n_c = App;\nwindow.App = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s2","$RefreshSig$","React","useRef","useState","APIProvider","useDirectionService","useApiIsLoaded","Map","AdvancedMarker","useMapsLibrary","Pin","InfoWindow","AutocompleteProps","Multiple","jsxDEV","_jsxDEV","google","window","App","_s","position","setPosition","lat","lng","data","setData","car","walk","bus","add1","add2","add3","add4","add5","childToParent","childdata","console","log","map","setMap","dResponse","setDResponse","travelTime","setTravelTime","distance","setDistance","destinationRef","originRef","travelMethodRef","apiKey","process","env","REACT_APP_API_KEY","children","className","fileName","lineNumber","columnNumber","onClick","findRoute","class","primary","style","height","zoom","center","onLoad","useDirectionsRenderer","dService","isLoaded","googleMapsApiKey","libraries","position2","maps","LatLng","directionsRenderer","request","route","travelMode","destination","origin","result","status","setDirections","test","findBestHome","position1","position3","DirectionsService","importLibrary","routes","legs","text","duration","_c","$RefreshReg$"],"sources":["C:/Users/sb421/OneDrive/Desktop/InnovateHacks_Hackathon/frontend/src/App.js"],"sourcesContent":["\"use client\";\n\n\nimport React, {useRef, useState} from \"react\";\n//import * as React from 'react';\n\n\nimport {\n  APIProvider,\n  useDirectionService,\n  useApiIsLoaded,\n  Map,\n  AdvancedMarker,\nuseMapsLibrary,\n  Pin,\n  InfoWindow,\n  AutocompleteProps,\n} from \"@vis.gl/react-google-maps\"\n\n\nimport Multiple from \"./components/Form.js\";\n\n\nconst google = window.google\n\n\nexport default function App() {\n   \n  /*\n  const isLoaded  = useApiIsLoaded({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries: [\"places\"],\n  });\n\n\n  if (!isLoaded) return <div>Loading...</div>;\n  return <MapA />;\n}\n\n\nfunction MapA() {\n*/\n\n\n  // const position = {lat: 51, lng: 9}; \n  const [position, setPosition] = useState({lat: 51, lng: 9});\n    // const [data, setData] = useState(10); passes all data from from to map\n  const [data, setData] = useState({car: \"\",walk: \"\",bus: \"\",add1: 10,add2: 40,add3: 29,add4: \"\",add5: \"\"});\n\n  const childToParent = (childdata) => {\n    setData(childdata);\n    console.log(data);\n  }\n\n\n\n\n\n  const [map, setMap] = useState((null))\n  const [dResponse, setDResponse] = useState(null)\n  const [travelTime, setTravelTime] = useState('')\n  const [distance, setDistance] = useState('')\n  const destinationRef = useRef()\n  const originRef = useRef()\n  const travelMethodRef = useRef()\n\n\n  //destinationRef = position\n  //originRef = position2\n//{process.env.REACT_APP_API_KEY}\n\n  return (\n \n    <APIProvider apiKey = {process.env.REACT_APP_API_KEY}    >\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h>NuCasa</h>\n          <button onClick ={() =>findRoute(data)}>testDirections</button>\n        </header>\n      </div>\n     \n      <div class=\"split left-panel \">\n        <Multiple childToParent={childToParent}/>\n          <p>{childToParent}</p>\n          <button primary onClick={() => childToParent(data)}>Click Child</button>\n      </div>\n\n\n      <div class=\"split right-panel \" style = {{height: \"97vh\"} }>\n        <Map zoom = {9} center = {position} onLoad={map => setMap(map)}>\n        </Map>\n      </div>\n    </APIProvider>\n  );\n//onLoad={map => setMap(map)}\n\n\n\n\n\n\n  function useDirectionsRenderer({dService}) {\n    const isLoaded  = useApiIsLoaded({\n      googleMapsApiKey: process.env.REACT_APP_API_KEY,\n      libraries: [\"places\"],\n    });\n \n   \n    const position2 = new google.maps.LatLng(53.5, 9.8);\n\n    \n    const directionsRenderer = useMapsLibrary('directionsRenderer');\n    directionsRenderer.setMap(map);\n    const request = dService.route({\n      travelMode: 'DRIVING',\n      destination: position,\n      origin: position2,\n    })\n    dService.route(request, function(result, status) {\n      if (status == 'OK') {\n        directionsRenderer.setDirections(result);\n      }\n    });\n  }\nconst test = 5;\n\n    async function findBestHome(data) {\n    }\n\n  async function findRoute(data) {\n    // const position2 = new google.maps.LatLng(53.5, 9.8);\n    const position1 = new google.maps.LatLng(data.add1,data.add1);\n    const position2 = new google.maps.LatLng(data.add2,data.add2);\n    const position3 = new google.maps.LatLng(data.add3,data.add3);\n\n    //UNSUCESSFUL: TRYING to manipulate visual of map based on positon, ideally this will be the optimal living location\n    // setPosition({lat: data.add1, lng: 9});\n\n    const {DirectionsService} = await google.maps.importLibrary(\"routes\")\n   \n    const dService = new DirectionsService //added() here idk why it worked\n   \n    //here is when we need to do something with 3 addresses\n\n    const result = await dService.route({\n     \n      destination: position1,\n      origin: position3,\n      travelMode: 'DRIVING',\n    })\n\n    // findBestHome(data); \n\n    setDistance(result.routes[0].legs[0].distance.text)\n    setTravelTime(result.routes[0].legs[0].duration.text)\n    console.log(distance)\n    console.log(travelTime) \n  }\n\n\n}\n\nwindow.App= App;"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,GAAA,GAAAC,YAAA;AAGb,OAAOC,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C;;AAGA,SACEC,WAAW,EACXC,mBAAmB,EACnBC,cAAc,EACdC,GAAG,EACHC,cAAc,EAChBC,cAAc,EACZC,GAAG,EACHC,UAAU,EACVC,iBAAiB,QACZ,2BAA2B;AAGlC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAM;AAG5B,eAAe,SAASE,GAAGA,CAAA,EAAG;EAAAnB,GAAA;EAAA,IAAAoB,EAAA,GAAAnB,YAAA;EAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAOE;EACA,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IAACmB,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAC,CAAC,CAAC;EACzD;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC;IAACuB,GAAG,EAAE,EAAE;IAACC,IAAI,EAAE,EAAE;IAACC,GAAG,EAAE,EAAE;IAACC,IAAI,EAAE,EAAE;IAACC,IAAI,EAAE,EAAE;IAACC,IAAI,EAAE,EAAE;IAACC,IAAI,EAAE,EAAE;IAACC,IAAI,EAAE;EAAE,CAAC,CAAC;EAEzG,MAAMC,aAAa,GAAIC,SAAS,IAAK;IACnCV,OAAO,CAACU,SAAS,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;EACnB,CAAC;EAMD,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGpC,QAAQ,CAAE,IAAK,CAAC;EACtC,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM2C,cAAc,GAAG5C,MAAM,CAAC,CAAC;EAC/B,MAAM6C,SAAS,GAAG7C,MAAM,CAAC,CAAC;EAC1B,MAAM8C,eAAe,GAAG9C,MAAM,CAAC,CAAC;;EAGhC;EACA;EACF;;EAEE,oBAEEa,OAAA,CAACX,WAAW;IAAC6C,MAAM,EAAIC,OAAO,CAACC,GAAG,CAACC,iBAAkB;IAAAC,QAAA,gBACnDtC,OAAA;MAAKuC,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBtC,OAAA;QAAQuC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC5BtC,OAAA;UAAAsC,QAAA,EAAG;QAAM;UAAAE,QAAA,EAAAzD,YAAA;UAAA0D,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACb1C,OAAA;UAAQ2C,OAAO,EAAGA,CAAA,KAAKC,SAAS,CAACnC,IAAI,CAAE;UAAA6B,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAzD,YAAA;UAAA0D,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAF,QAAA,EAAAzD,YAAA;QAAA0D,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAF,QAAA,EAAAzD,YAAA;MAAA0D,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN1C,OAAA;MAAK6C,KAAK,EAAC,mBAAmB;MAAAP,QAAA,gBAC5BtC,OAAA,CAACF,QAAQ;QAACqB,aAAa,EAAEA;MAAc;QAAAqB,QAAA,EAAAzD,YAAA;QAAA0D,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvC1C,OAAA;QAAAsC,QAAA,EAAInB;MAAa;QAAAqB,QAAA,EAAAzD,YAAA;QAAA0D,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB1C,OAAA;QAAQ8C,OAAO;QAACH,OAAO,EAAEA,CAAA,KAAMxB,aAAa,CAACV,IAAI,CAAE;QAAA6B,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAzD,YAAA;QAAA0D,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAF,QAAA,EAAAzD,YAAA;MAAA0D,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eAGN1C,OAAA;MAAK6C,KAAK,EAAC,oBAAoB;MAACE,KAAK,EAAI;QAACC,MAAM,EAAE;MAAM,CAAG;MAAAV,QAAA,eACzDtC,OAAA,CAACR,GAAG;QAACyD,IAAI,EAAI,CAAE;QAACC,MAAM,EAAI7C,QAAS;QAAC8C,MAAM,EAAE5B,GAAG,IAAIC,MAAM,CAACD,GAAG;MAAE;QAAAiB,QAAA,EAAAzD,YAAA;QAAA0D,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAF,QAAA,EAAAzD,YAAA;MAAA0D,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAF,QAAA,EAAAzD,YAAA;IAAA0D,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;EAElB;;EAOE,SAASU,qBAAqBA,CAAC;IAACC;EAAQ,CAAC,EAAE;IAAAjD,EAAA;IACzC,MAAMkD,QAAQ,GAAI/D,cAAc,CAAC;MAC/BgE,gBAAgB,EAAEpB,OAAO,CAACC,GAAG,CAACC,iBAAiB;MAC/CmB,SAAS,EAAE,CAAC,QAAQ;IACtB,CAAC,CAAC;IAGF,MAAMC,SAAS,GAAG,IAAIxD,MAAM,CAACyD,IAAI,CAACC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC;IAGnD,MAAMC,kBAAkB,GAAGlE,cAAc,CAAC,oBAAoB,CAAC;IAC/DkE,kBAAkB,CAACpC,MAAM,CAACD,GAAG,CAAC;IAC9B,MAAMsC,OAAO,GAAGR,QAAQ,CAACS,KAAK,CAAC;MAC7BC,UAAU,EAAE,SAAS;MACrBC,WAAW,EAAE3D,QAAQ;MACrB4D,MAAM,EAAER;IACV,CAAC,CAAC;IACFJ,QAAQ,CAACS,KAAK,CAACD,OAAO,EAAE,UAASK,MAAM,EAAEC,MAAM,EAAE;MAC/C,IAAIA,MAAM,IAAI,IAAI,EAAE;QAClBP,kBAAkB,CAACQ,aAAa,CAACF,MAAM,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ;EAAC9D,EAAA,CAtBQgD,qBAAqB;IAAA,QACV7D,cAAc,EASLG,cAAc;EAAA;EAa7C,MAAM2E,IAAI,GAAG,CAAC;EAEV,eAAeC,YAAYA,CAAC7D,IAAI,EAAE,CAClC;EAEF,eAAemC,SAASA,CAACnC,IAAI,EAAE;IAC7B;IACA,MAAM8D,SAAS,GAAG,IAAItE,MAAM,CAACyD,IAAI,CAACC,MAAM,CAAClD,IAAI,CAACK,IAAI,EAACL,IAAI,CAACK,IAAI,CAAC;IAC7D,MAAM2C,SAAS,GAAG,IAAIxD,MAAM,CAACyD,IAAI,CAACC,MAAM,CAAClD,IAAI,CAACM,IAAI,EAACN,IAAI,CAACM,IAAI,CAAC;IAC7D,MAAMyD,SAAS,GAAG,IAAIvE,MAAM,CAACyD,IAAI,CAACC,MAAM,CAAClD,IAAI,CAACO,IAAI,EAACP,IAAI,CAACO,IAAI,CAAC;;IAE7D;IACA;;IAEA,MAAM;MAACyD;IAAiB,CAAC,GAAG,MAAMxE,MAAM,CAACyD,IAAI,CAACgB,aAAa,CAAC,QAAQ,CAAC;IAErE,MAAMrB,QAAQ,GAAG,IAAIoB,iBAAiB,CAAD,CAAC,EAAC;;IAEvC;;IAEA,MAAMP,MAAM,GAAG,MAAMb,QAAQ,CAACS,KAAK,CAAC;MAElCE,WAAW,EAAEO,SAAS;MACtBN,MAAM,EAAEO,SAAS;MACjBT,UAAU,EAAE;IACd,CAAC,CAAC;;IAEF;;IAEAjC,WAAW,CAACoC,MAAM,CAACS,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC/C,QAAQ,CAACgD,IAAI,CAAC;IACnDjD,aAAa,CAACsC,MAAM,CAACS,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACE,QAAQ,CAACD,IAAI,CAAC;IACrDxD,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;IACrBR,OAAO,CAACC,GAAG,CAACK,UAAU,CAAC;EACzB;AAGF;AAAC3C,GAAA,CAtIuBmB,GAAG;AAAA4E,EAAA,GAAH5E,GAAG;AAwI3BD,MAAM,CAACC,GAAG,GAAEA,GAAG;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}